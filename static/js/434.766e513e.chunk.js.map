{"version":3,"file":"static/js/434.766e513e.chunk.js","mappings":";0UAgBO,SAASA,EAAiBC,GAC/B,IAAIC,EAAO,GACWA,EAAL,MAAbD,EAAM,GAAmBA,EAAME,MAAM,GAC7BF,EAAME,QAClB,IAAMC,EAAcC,SAASJ,EAAM,GAAI,IAC3BC,EAAKC,MAAM,EAAG,GACZD,EAAKC,MAAM,EAAG,GACfD,EAAKC,MAAM,EAAG,GAI3B,OAAOC,EAAc,CACtB,CAOM,SAASE,EACdC,GAQC,IADDN,EACA,uDADgB,WAEhBO,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAMC,SAASC,eAAe,OAC9BC,EAAQF,SAASC,eAAe,SAChCE,EAASH,SAASC,eAAe,UACjCG,EAAOJ,SAASC,eAAe,QAC/BI,EAAYL,SAASC,eAAe,aACpCK,EAASN,SAASC,eAAe,UACjCM,EAAkBP,SAASC,eAAe,oBAuBhD,GAtBY,OAARF,IACFA,EAAIS,MAAMC,OAASZ,EAAQE,IAC3BA,EAAIS,MAAME,gBAAkBnB,GAEhB,OAAVW,IACFA,EAAMM,MAAMG,MAAQd,EAAQK,MAC5BA,EAAMM,MAAME,gBAAkBnB,GAEjB,OAAXY,IACFA,EAAOK,MAAMC,OAASZ,EAAQM,OAC9BA,EAAOK,MAAME,gBAAkBnB,GAEpB,OAATa,IACFA,EAAKI,MAAMG,MAAQd,EAAQO,KAC3BA,EAAKI,MAAME,gBAAkBnB,GAEb,OAAdc,IACFA,EAAUG,MAAMI,YAAcf,EAAQQ,WAEzB,OAAXC,IACFA,EAAOE,MAAME,gBAAkBnB,GAET,OAApBgB,EAA0B,CAC5B,IACMM,EADUvB,EAAiBC,GACJ,UAAY,OACzCgB,EAAgBC,MAAMjB,MAAQsB,CAC/B,CACD,OAAO,WACO,OAARd,IACFA,EAAIS,MAAMC,OAAS,MACnBV,EAAIS,MAAME,gBAAkB,WAEhB,OAAVR,IACFA,EAAMM,MAAMG,MAAQ,MACpBT,EAAMM,MAAME,gBAAkB,WAEjB,OAAXP,IACFA,EAAOK,MAAMC,OAAS,MACtBN,EAAOK,MAAME,gBAAkB,WAEpB,OAATN,IACFA,EAAKI,MAAMG,MAAQ,MACnBP,EAAKI,MAAME,gBAAkB,WAEb,OAAdL,IACFA,EAAUG,MAAMI,YAAc,OAEjB,OAAXN,IACFA,EAAOE,MAAME,gBAAkB,WAET,OAApBH,IACFA,EAAgBC,MAAMjB,MAAQ,UAEjC,CAEF,GAAE,GACJ,CAmBM,SAASuB,EAAavB,IAC3BO,EAAAA,EAAAA,YAAU,WAGR,OAFAE,SAASe,KAAKP,MAAMQ,WAAa,wBACjChB,SAASe,KAAKP,MAAME,gBAApB,UAAyCnB,GAClC,WACLS,SAASe,KAAKP,MAAME,gBAAkB,MACvC,CAEF,GAAE,GACJ,CAKM,IAAMO,EAAiB,IAAIC,EAAAA,GAAQ,CACxCC,KAGE,KAOG,SAASC,IACd,OAAOH,EAAeI,QAAQ,mCAAoC,CAChEC,MAAO,eACPC,KAAM,0BAET,CAuCM,IAAMC,EAAiB,SAACC,GAE7B,QAAiBC,IAAbD,EAAwB,MAAO,CAAEE,QAAID,EAAWE,WAAOF,GAC3D,IAgBIE,EAhBEC,EAAW,IAAIC,KAAKL,GACpBM,EAAM,IAAID,KACVE,EAAUD,EAAIE,cACdC,EAAWH,EAAII,WACfC,EAASL,EAAIM,UACbC,EAAUP,EAAIQ,WACdC,EAAST,EAAIU,aAIbC,EAAa,IAAIZ,KAAKE,EAASE,EAAUE,EAAQE,EAASE,EAAS,GACnEG,EAAW,IAAIb,KAAKE,EAASE,EAAUE,EAAQE,EAAU,EAAGE,GAC5DI,EAAU,IAAId,KAAKE,EAASE,EAAUE,EAAS,EAAGE,EAASE,GAC3DK,EAAY,IAAIf,KAAKE,EAASE,EAAW,EAAGE,EAAQE,EAASE,GAC7DM,EAAW,IAAIhB,KAAKE,EAAU,EAAGE,EAAUE,EAAQE,EAASE,GAC5DO,EAAahB,EAAIiB,UAAYnB,EAASmB,UAe5C,OAZEpB,EADEc,GAAcb,EACR,sBACCc,GAAYd,EAChB,UAAMoB,KAAKC,KAAKH,EAAa,IAAO,IAApC,iBACIH,GAAWf,EACf,UAAMoB,KAAKC,KAAKH,EAAa,IAAO,GAAK,IAAzC,uBACIF,GAAahB,EACjB,UAAMoB,KAAKC,KAAKH,EAAa,IAAO,GAAK,GAAK,IAA9C,iBACID,GAAYjB,EAChB,UAAMoB,KAAKC,KAAKH,EAAa,IAAO,GAAK,GAAK,GAAK,IAAnD,uBAEA,UAAME,KAAKC,KAAKH,EAAa,IAAO,GAAK,GAAK,GAAK,GAAK,IAAxD,iBAEA,CAAEpB,GAAIE,EAASsB,eAAe,MAAOvB,MAAAA,EAC7C,EAOM,SAASwB,EAAWC,GAA+B,IAAnBC,EAAkB,uDAAX,UAK5C,OAJAxD,EAAAA,EAAAA,YAAU,WACRyD,QAAQC,IAAR,UAAeF,EAAf,MAAyBD,EAE1B,GAAE,CAACA,IACGA,CACR,CAWM,SAASI,EAAeC,GAY7B,OAX+B,kBAARA,EAAmBC,UAAUD,GAAO,IAExDjE,MAAM,GACNmE,MAAM,KACNC,KAAI,SAACC,GAAD,OAAWA,EAAMF,MAAM,IAAvB,IAEcG,QAAqB,SAACC,EAAD,EAAYC,GAAO,IAAD,eAAbC,EAAa,KAAVC,EAAU,KAE1D,OADAH,EAAEE,GAAKC,EACAH,CACR,GAAE,CAAC,EAGL,CAMM,IAAMI,EAAsB,WAAsB,IAArBC,EAAoB,uDAAT,MAC7CvE,EAAAA,EAAAA,YAAU,WACOE,SAASsE,iBAAiB,SAElCC,SAAQ,SAACC,EAAOC,GACrBD,EAAME,aAAa,KAAnB,eAAiCD,IACjC,IAAME,EAAQ3E,SAAS4E,cAAc,SACrCD,EAAMD,aAAa,MAAnB,eAAkCD,IAClCD,EAAMK,sBAAsB,WAAYF,EACzC,GACF,GAAE,CAACN,GACL,qCC1KD,IAnH6B,8mECiD7B,EAXkB,SAAC,GAAiC,IAA/BS,EAA8B,EAA9BA,SAAaC,GAAiB,YACjD,MAAI,SAAUD,GAAiC,SAArBA,EAAQ,KA3BjB,SAAC,GAAoC,IAAlCE,EAAiC,EAAjCA,UAAWF,EAAsB,EAAtBA,SAO3BG,EAAW,OAIf,OAHID,GAAaA,EAAUE,WAAW,WACpCD,EAAWD,EAAUG,QAAQ,QAAS,MAGtC,iCAEE,oBACA,SAAC,IAAD,CACEF,SAAUA,EACVzE,MAAOA,EAAAA,EACP4E,YAjBU,CACdC,aAAc,MACdC,QAAS,OACTC,OAAQ,QACR7E,gBAAiB,wBAcb8E,WAAW,EACXV,SAAUA,MAIjB,CAIUW,CAAWX,EAAQ,QAG1B,gCAAKtE,MAAO,CAAE6E,aAAc,QAAaN,GAAzC,aACGD,IAGN,EC7CKY,EAAUC,EAAAA,GAAAA,EAAH,kHAWb,EAJe,WACb,OAAO,SAACD,EAAD,CAASV,UAAU,iBAAnB,iBACR,ECKKY,EAAYD,EAAAA,GAAAA,QAAH,yPAYTE,EAAUF,EAAAA,GAAAA,OAAH,uTAgBPG,EAAOH,EAAAA,GAAAA,QAAH,iLAQNI,EAAAA,GAwCJ,EArCgB,SAAC,GAAwC,IAAD,EAArCC,EAAqC,EAArCA,KACXC,GADgD,EAA/BC,UACT,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAO,IAChBrE,GAAOH,EAAAA,EAAAA,IAAc,OAACyE,QAAD,IAACA,OAAD,EAACA,EAAUE,YAAhCxE,GACFyE,EAAM,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAAUI,YAAb,aAAG,EAAgBC,MAI/B,OAFAlC,EAAAA,EAAAA,IAAoB4B,IAGlB,UAACJ,EAAD,YACE,UAACC,EAAD,YACE,cAAGb,UAAU,kBAAb,cACgBtD,IAAbuE,EAAyBA,EAASM,MAAM3C,MAAM,WAAW,GAAK,MAEjE,iBAAKoB,UAAU,eAAf,UACGoB,GACD,SAAC,EAAD,IACCzE,SAIL,SAACmE,EAAD,WACE,SAAC,IAAD,CACEjG,QAAS,CACP2G,UAAW,CACTC,IAAKC,IAHX,cAOgBhF,IAAbuE,EACGA,EAASlF,KAAM6C,MAAM,OAAOnE,MAAM,GAAGkH,KAAK,OAC1C,SAKb,KCxFiBhB,EAAAA,GAAAA,MAAH,qICEf,EAJe,WACb,OAAO,qCACR,ECMKC,EAAYD,EAAAA,GAAAA,QAAH,sIAQTiB,EAASjB,EAAAA,GAAAA,QAAH,gzDAyKZ,EAtFc,SAAC,GAAqC,IAAnCK,EAAkC,EAAlCA,KAAME,EAA4B,EAA5BA,UACbW,GAAWC,EAAAA,EAAAA,MAAXD,OACFE,GAAWC,EAAAA,EAAAA,OAEjB5D,EAAAA,EAAAA,IAAWyD,GACX,IAIMI,EAAQ,OAAGjB,QAAH,IAAGA,OAAH,EAAGA,EAAMkB,QAAO,SAACC,GAC7B,IAAMC,GAAW3D,EAAAA,EAAAA,IAAeoD,GAChC,YAAsBnF,IAAlB0F,EAASC,MACNF,EAAMG,OACVzD,KAAI,SAACsD,GAAD,MAA4B,kBAAVA,GAAsBA,EAAM7D,IAA9C,IACJiE,SAASH,EAASC,KACtB,IAED,OACE,SAAC,EAAD,UACGnB,GACC,2EACuB,KAAb,OAARe,QAAQ,IAARA,OAAA,EAAAA,EAAUO,SACZ,SAAC,EAAD,IADE,OAGFxB,QAHE,IAGFA,OAHE,EAGFA,EACIkB,QAAO,SAACC,GACR,IAAMC,GAAW3D,EAAAA,EAAAA,IAAeoD,GAChC,YAAsBnF,IAAlB0F,EAASC,MACNF,EAAMG,OACVzD,KAAI,SAACsD,GAAD,MAA4B,kBAAVA,GAAsBA,EAAM7D,IAA9C,IACJiE,SAASH,EAASC,KACtB,IACAxD,KAAI,SAACsD,GACJ,IAAMZ,EAAQY,EAAMZ,MAAM3C,MAAM,WAAW,GACnC0D,EAAiBH,EAAjBG,OAAQvG,EAASoG,EAATpG,KAEV0G,EAAMH,EAAOzD,KAAI,SAACc,GAAD,MACJ,kBAAVA,EAAqBA,EAAQA,EAAMrB,IADrB,IAGjBoE,EAAW,OAAG3G,QAAH,IAAGA,OAAH,EAAGA,EAAM6C,MAAM,OAAO,GAAG+D,OAClC/F,GAAUJ,EAAAA,EAAAA,IAAe2F,EAAMhB,YAA/BvE,MACR,OACE,UAACgF,EAAD,YACE,eAAI5B,UAAU,eAAd,UACE,SAAC,KAAD,CAAM4C,GAAE,gBAAWT,EAAMU,QAAzB,SAAoCtB,OAEtC,iBAAKvB,UAAU,oBAAf,WACE,iBAAMA,UAAU,aAAhB,SAA8BpD,KAC9B,SAAC,EAAD,IACC6F,EAAI5D,KAAI,SAACiE,EAAKC,GACb,YACUrG,IAARoG,GACQ,SAARA,GACAA,EAAI,GAAGE,gBAAkBF,EAAI,IAG3B,iBAEE9C,UAAU,gBACViD,SAtDAC,EAsDwBJ,EAtDR,SAACK,GACvCpB,EAAS,cAAD,OAAemB,GACxB,GAiDqB,SAKGJ,GAJIC,GAOC,KA3DP,IAACG,CA4DP,KACD,SAAC,EAAD,KACA,eACElD,UAAU,kBACVoD,KAAMjB,EAAMkB,SACZC,OAAO,SACPC,IAAI,aAJN,WAME,SAAC,MAAD,CAAUvD,UAAU,yBANtB,uBAUF,gBAAKA,UAAU,mBAAf,SAAmC0C,MAnCxBP,EAAMqB,GAsCtB,KAIV,ECjLK5C,GCFYD,EAAAA,GAAAA,QAAH,kDDEGA,EAAAA,GAAAA,MAAH,2NAYTE,EAAUF,EAAAA,GAAAA,OAAH,klBA8BP8C,EAAO9C,EAAAA,GAAAA,QAAH,osBAyFV,EAlDgB,SAAC,GAAqC,IAAnCK,EAAkC,EAAlCA,KACTa,GAD2C,EAA5BX,WACJY,EAAAA,EAAAA,MAAXD,QACF6B,EAAoC,CAAC,GAC1BjF,EAAAA,EAAAA,IAAeoD,GAC5B,OAAJb,QAAI,IAAJA,GAAAA,EAAMzB,SAAQ,SAAC4C,GACMA,EAAXG,OAELzD,KAAI,SAACc,GAAD,MAA4B,kBAAVA,GAAsBA,EAAMrB,IAA9C,IACJiB,SAAQ,SAACI,GAEW,kBAAVA,GACPA,EAAM,GAAGqD,gBAAkBrD,EAAM,IACrB,SAAVA,SAEgBjD,IAAlBgH,EAAO/D,GACF+D,EAAO/D,GAAS,EACA,kBAAVA,GAAsB+D,EAAO/D,KAC3C,GACJ,IACD,IAAMgE,EAAQC,OAAOC,QAAQH,GAKfC,EAAM5E,QAClB,iCAAM+E,GAAN,qCAA4B,CAAC,GAAIA,EAAjC,QACA,CAAC,GAAI,IAEP,OACE,UAAC,EAAD,YACE,SAAC,EAAD,oBACA,UAACL,EAAD,YACE,eAAGzD,UAAU,mBAAmBoD,KAAK,QAArC,WACE,gBAAKpD,UAAU,aAAf,oBACA,iBAAKA,UAAU,cAAf,qBAA+BgB,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMwB,OAArC,UAEDmB,EAAM9E,KAAI,WAAiBY,GAAW,IAAD,eAAzBE,EAAyB,KAAlBmE,EAAkB,KACpC,OACE,UAAC,KAAD,CAAkB9D,UAAU,aAAa4C,GAAE,qBAAgBjD,GAA3D,WACE,gBAAKK,UAAU,aAAf,SAA6BL,KAC7B,iBAAKK,UAAU,cAAf,cAA+B8D,EAA/B,SAFSrE,EAKd,SAKR,EExHKmB,EAAYD,EAAAA,GAAAA,KAAH,yHAqDf,EA9Ca,WACX,OAAkCoD,EAAAA,EAAAA,WAAS,GAA3C,eAAO7C,EAAP,KAAkB8C,EAAlB,KACA,GAAwBD,EAAAA,EAAAA,UAA6C,MAArE,eAAO/C,EAAP,KAAaiD,EAAb,KAEA,GAA8BF,EAAAA,EAAAA,UAAmB,IAAjD,eAAgBG,GAAhB,WACQrB,GAAWsB,EAAAA,EAAAA,MAAXtB,OACFuB,EAAuD,OAAGpD,QAAH,IAAGA,OAAH,EAAGA,EAAMkB,QACpE,SAACC,GAAD,OAAWA,EAAMU,SAAWwB,OAAOxB,EAAnC,IAMIyB,EAAS,CAAC,gBAqBhB,OAnBAxI,EAAAA,EAAAA,IAAa,YAEbhB,EAAAA,EAAAA,YAAU,WACRkJ,GAAa,IACb5H,EAAAA,EAAAA,MACGmI,MAAK,SAACC,GACL,IAAMC,EAAeD,EAAIxD,KAAKkB,QAC5B,SAACC,GAAD,aACEA,EAAMZ,MAAMgB,SAAS,WACrB+B,EAAO/B,SAAP,UAAgBJ,EAAMd,YAAtB,aAAgB,EAAYC,MAF9B,IAIF2C,EAAQQ,GACRP,EAAWO,EAAa5F,KAAI,SAACsD,GAAD,OAAWA,EAAMU,MAAjB,KAC5BmB,GAAa,EACd,IACAU,OAAM,SAACC,GAAD,OAASpG,QAAQC,IAAI,kBAAmBmG,EAAxC,GAEV,GAAE,KAGD,UAAC,EAAD,YACE,SAAC,EAAD,CAAS3D,KAAMA,EAAME,UAAWA,IAC/B2B,GACC,SAAC,EAAD,CAAS7B,KAAMoD,EAASlD,UAAWA,KAEnC,SAAC,EAAD,CAAOF,KAAMA,EAAME,UAAWA,MAIrC","sources":["functions/index.tsx","lib/StyleForMarkdown.tsx","lib/MarkdownConfig.tsx","components/details/Middot.tsx","components/blog/Article.tsx","components/blog/FloatMenu.tsx","components/blog/NoData.tsx","components/blog/Issue.tsx","components/blog/SideNav.tsx","components/blog/Markdown.tsx","pages/Blog.tsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { Octokit } from 'octokit';\r\nimport { FaRegCopy } from 'react-icons/fa';\r\nimport styled from 'styled-components';\r\n\r\nexport function useFadeIn() {\r\n  useEffect(() => {\r\n    console.log(123);\r\n  }, []);\r\n}\r\n\r\n/**\r\n * 받은 색상이 밝은색이면 true를 반환합니다.\r\n * @param color 16진수 색상코드 (ex: `#c4e0fa`)\r\n * @returns `boolean` (ex: `true`)\r\n */\r\nexport function isLightColorTone(color: string) {\r\n  let code = '';\r\n  if (color[0] === '#') code = color.slice(1);\r\n  else code = color.slice();\r\n  const firstLetter = parseInt(color[1], 16);\r\n  const red = code.slice(1, 2);\r\n  const green = code.slice(3, 4);\r\n  const blue = code.slice(5, 6);\r\n  //! R, G, B에 따라서 나눌 필요가 있음. 현재는 임시방편\r\n  // 0 1 2 3 4 5 6 7 => dark tone\r\n  // 8 9 A B C D E F => light tone\r\n  return firstLetter > 8;\r\n}\r\n\r\n/**\r\n * 전체 화면 테두리를 주어진 두께와 배경색으로 변경합니다. 적용된 컴포넌트가 Unmount될 때 기본값(`2px`, `soft-blue-100`)으로 되돌립니다.\r\n * @param options 각 Element 별 크기 속성을 담은 옵션\r\n * @param color 변경될 배경색\r\n */\r\nexport function useScreenBorder(\r\n  options: {\r\n    top: string;\r\n    right: string;\r\n    bottom: string;\r\n    left: string;\r\n    container: string;\r\n  },\r\n  color: string = '#c4e0fa'\r\n) {\r\n  useEffect(() => {\r\n    const top = document.getElementById('top');\r\n    const right = document.getElementById('right');\r\n    const bottom = document.getElementById('bottom');\r\n    const left = document.getElementById('left');\r\n    const container = document.getElementById('container');\r\n    const footer = document.getElementById('footer');\r\n    const footerCopyright = document.getElementById('footer-copyright');\r\n    if (top !== null) {\r\n      top.style.height = options.top;\r\n      top.style.backgroundColor = color;\r\n    }\r\n    if (right !== null) {\r\n      right.style.width = options.right;\r\n      right.style.backgroundColor = color;\r\n    }\r\n    if (bottom !== null) {\r\n      bottom.style.height = options.bottom;\r\n      bottom.style.backgroundColor = color;\r\n    }\r\n    if (left !== null) {\r\n      left.style.width = options.left;\r\n      left.style.backgroundColor = color;\r\n    }\r\n    if (container !== null) {\r\n      container.style.borderWidth = options.container;\r\n    }\r\n    if (footer !== null) {\r\n      footer.style.backgroundColor = color;\r\n    }\r\n    if (footerCopyright !== null) {\r\n      const isLight = isLightColorTone(color);\r\n      const colorValue = isLight ? '#424242' : '#eee';\r\n      footerCopyright.style.color = colorValue;\r\n    }\r\n    return () => {\r\n      if (top !== null) {\r\n        top.style.height = '2px';\r\n        top.style.backgroundColor = '#c4e0fa';\r\n      }\r\n      if (right !== null) {\r\n        right.style.width = '2px';\r\n        right.style.backgroundColor = '#c4e0fa';\r\n      }\r\n      if (bottom !== null) {\r\n        bottom.style.height = '2px';\r\n        bottom.style.backgroundColor = '#c4e0fa';\r\n      }\r\n      if (left !== null) {\r\n        left.style.width = '2px';\r\n        left.style.backgroundColor = '#c4e0fa';\r\n      }\r\n      if (container !== null) {\r\n        container.style.borderWidth = '2px';\r\n      }\r\n      if (footer !== null) {\r\n        footer.style.backgroundColor = '#c4e0fa';\r\n      }\r\n      if (footerCopyright !== null) {\r\n        footerCopyright.style.color = '#424242';\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n}\r\n\r\n/**\r\n * body 태그에 stop-scrolling 클래스를 부여합니다.\r\n */\r\nexport function useStopBodyScroll() {\r\n  useEffect(() => {\r\n    document.body.classList.add('stop-scrolling');\r\n    return () => {\r\n      document.body.classList.remove('stop-scrolling');\r\n    };\r\n  }, []);\r\n}\r\n\r\n/**\r\n * body 태그에 주어진 color를 배경색으로 지정합니다. 언마운트될 경우 #fff로 설정합니다.\r\n * @param color 색상코드\r\n * @returns nothing\r\n */\r\nexport function useBodyColor(color: String) {\r\n  useEffect(() => {\r\n    document.body.style.transition = 'background-color 0.5s';\r\n    document.body.style.backgroundColor = `${color}`;\r\n    return () => {\r\n      document.body.style.backgroundColor = '#fff';\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n}\r\n\r\n/**\r\n * Octokit 클라이언트 셋업입니다. Public 권한으로 실행되는 octokit입니다.\r\n */\r\nexport const octokitForBlog = new Octokit({\r\n  auth:\r\n    // process.env.REACT_APP_PERSONAL_TOKEN\r\n    // process.env.GITHUB_TOKEN,\r\n    '',\r\n});\r\n\r\n/**\r\n * 본 레포의 issues 탭 정보를 받아옵니다.\r\n * @returns issues 탭 정보를 담은 Promise 객체\r\n */\r\nexport function getIssues() {\r\n  return octokitForBlog.request('GET /repos/{owner}/{repo}/issues', {\r\n    owner: 'Citysquirrel',\r\n    repo: 'citysquirrel.github.io',\r\n  });\r\n}\r\n\r\n/**\r\n * 깃허브 OAuth 인증을 수행합니다(Redirect).\r\n * {@link https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps}\r\n */\r\nexport function execGithubLogin() {\r\n  window.location.assign(\r\n    'https://github.com/login/oauth/authorize?client_id=dbbd22f1eae2c8421188'\r\n  );\r\n}\r\n\r\n/**\r\n * 액세스 토큰을 사용해 Github 유저 인증을 실행합니다.\r\n * {@link https://docs.github.com/en/rest/users/users#get-the-authenticated-user}\r\n */\r\nexport function getUserInfo() {\r\n  const octokit = new Octokit({\r\n    auth: 'YOUR-TOKEN',\r\n  });\r\n  octokit.request('GET /user', {});\r\n  //Authorization: Bearer OAUTH-TOKEN\r\n  // axios.get(\"https://api.github.com/user\",{headers: {authorization:`Bearer ${token}` }})\r\n}\r\n\r\n/**\r\n * 마크다운 형식 문자열을 HTML 형식 문자열로 바꿔줍니다.\r\n * @param text 마크다운 형식의 문자열\r\n * @returns HTML 형식의 문자열을 담은 Promise\r\n */\r\nexport async function renderMarkdown(text: string) {\r\n  return await octokitForBlog.request('POST /markdown', { text });\r\n}\r\n\r\n/**\r\n * datetime을 문자열로 받아 로컬시간과 작성시점으로부터의 시간차를 한글 형태로 바꿔줍니다.\r\n * @param datetime `string` datetime 형식의 문자열\r\n * @returns `{ kr: 한글형태의 로컬시간, alias: 작성시점으로부터의 시간차 }`\r\n */\r\nexport const modifyDatetime = (datetime: string | undefined) => {\r\n  // datetime: UTC 시간\r\n  if (datetime === undefined) return { kr: undefined, alias: undefined };\r\n  const received = new Date(datetime);\r\n  const now = new Date();\r\n  const nowYear = now.getFullYear();\r\n  const nowMonth = now.getMonth();\r\n  const nowDay = now.getDate();\r\n  const nowHour = now.getHours();\r\n  const nowMin = now.getMinutes();\r\n\r\n  // 몇분전, 몇시간전, 몇일전, 몇달전, 몇년전\r\n  // 1분 한시간 하루 한달 일년\r\n  const aMinuteAgo = new Date(nowYear, nowMonth, nowDay, nowHour, nowMin - 1);\r\n  const aHourAgo = new Date(nowYear, nowMonth, nowDay, nowHour - 1, nowMin);\r\n  const aDayAgo = new Date(nowYear, nowMonth, nowDay - 1, nowHour, nowMin);\r\n  const aMonthAgo = new Date(nowYear, nowMonth - 1, nowDay, nowHour, nowMin);\r\n  const aYearAgo = new Date(nowYear - 1, nowMonth, nowDay, nowHour, nowMin);\r\n  const difference = now.getTime() - received.getTime();\r\n  let alias;\r\n  if (aMinuteAgo <= received) {\r\n    alias = '방금 전';\r\n  } else if (aHourAgo <= received) {\r\n    alias = `${Math.ceil(difference / 1000 / 60)}분 전`;\r\n  } else if (aDayAgo <= received) {\r\n    alias = `${Math.ceil(difference / 1000 / 60 / 60)}시간 전`;\r\n  } else if (aMonthAgo <= received) {\r\n    alias = `${Math.ceil(difference / 1000 / 60 / 60 / 24)}일 전`;\r\n  } else if (aYearAgo <= received) {\r\n    alias = `${Math.ceil(difference / 1000 / 60 / 60 / 24 / 30)}개월 전`;\r\n  } else {\r\n    alias = `${Math.ceil(difference / 1000 / 60 / 60 / 24 / 30 / 12)}년 전`;\r\n  }\r\n  return { kr: received.toLocaleString('KR'), alias };\r\n};\r\n\r\n/**\r\n * 임의의 변수를 받아 해당 변수가 변화했을 때 변수를 console.log로 찍어줍니다.\r\n * @param state 임의의 변수\r\n * @returns 변수의 이전 상태\r\n */\r\nexport function useConsole(state: any, name = 'console') {\r\n  useEffect(() => {\r\n    console.log(`${name}: `, state);\r\n    // eslint-disable-next-line\r\n  }, [state]);\r\n  return state;\r\n}\r\n\r\ninterface IQueryObject {\r\n  [key: string]: string;\r\n}\r\n\r\n/**\r\n * 쿼리스트링을 받아 키-값 객체 형태로 변환합니다.\r\n * @param str `QueryString`\r\n * @returns `key-value Object`\r\n */\r\nexport function modQueryString(str: string | undefined) {\r\n  const decoded = typeof str === 'string' ? decodeURI(str) : '';\r\n  const array = decoded\r\n    .slice(1)\r\n    .split('&')\r\n    .map((query) => query.split('='));\r\n\r\n  const object = array.reduce<IQueryObject>((t, [k, v], i) => {\r\n    t[k] = v;\r\n    return t;\r\n  }, {});\r\n\r\n  return object;\r\n}\r\n\r\n/**\r\n * 실행한 컴포넌트가 존재하는 스크린에서, 모든 체크박스를 찾아 라벨을 추가해줍니다.\r\n * @param def 의존성 배열\r\n */\r\nexport const useLabelAllCheckbox = (def: any = null) => {\r\n  useEffect(() => {\r\n    const inputs = document.querySelectorAll('input');\r\n\r\n    inputs.forEach((input, index) => {\r\n      input.setAttribute('id', `check${index}`);\r\n      const label = document.createElement('label');\r\n      label.setAttribute('for', `check${index}`);\r\n      input.insertAdjacentElement('afterend', label);\r\n    });\r\n  }, [def]);\r\n};\r\n\r\nexport const useCopyAllCodeblock = (def: any = null) => {\r\n  const Button = styled.button``;\r\n  useEffect(() => {\r\n    document.querySelectorAll('pre').forEach((pre) => {\r\n      const code = pre.childNodes[0];\r\n      const handleClick = (e: React.MouseEvent) => {\r\n        navigator.clipboard.writeText(code.textContent!);\r\n      };\r\n      const jsx = (\r\n        <Button onClick={handleClick}>\r\n          <FaRegCopy />\r\n        </Button>\r\n      );\r\n    });\r\n    // eslint-disable-next-line\r\n  }, [def]);\r\n};\r\n","export const styleForMarkdown = `\r\n  text-align: justify;\r\n  \r\n  a {\r\n    color: var(--soft-blue-600);\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n\r\n  p {\r\n    > code {\r\n      background-color: var(--gray-300);\r\n      padding: 2px 6px;\r\n      border-radius: 4px;\r\n    }\r\n  }\r\n\r\n  pre {\r\n    display: flex;\r\n    width: 100%;\r\n    > code {\r\n      flex: auto;\r\n      overflow-x: auto;\r\n      padding: 4px;\r\n      ::-webkit-scrollbar {\r\n        display: block;\r\n        height: 8px;\r\n      }\r\n      ::-webkit-scrollbar-thumb {\r\n        \r\n        background-color: var(--soft-blue-400);\r\n        border-radius: 4px;\r\n      }\r\n    }\r\n  }\r\n\r\n  li::marker {\r\n    color: var(--soft-blue-800);\r\n  }\r\n\r\n  li > p {\r\n    margin: 0;\r\n  }\r\n\r\n  input[type=\"checkbox\"] {\r\n    display: none;\r\n  }\r\n\r\n  input[type=\"checkbox\"] + label {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 1em;\r\n    height: 1em;\r\n    margin-right: 4px;\r\n    border: 1px solid var(--gray-800);\r\n    border-radius: 4px;\r\n    transform: translateY(2px);\r\n    cursor: pointer;\r\n    :hover {\r\n        box-shadow: 0 0 2px 1px var(--gray-500);\r\n    }\r\n  }\r\n\r\n  input[type=\"checkbox\"]:checked + label::after {\r\n    position: absolute;\r\n    content: \"\";\r\n    background-color: var(--soft-blue-500);\r\n    width: 0.8em;\r\n    height: 0.8em;\r\n    border-radius: 3px;\r\n  }\r\n\r\n  h1,\r\n  h2 {\r\n    border-bottom: 1px solid var(--gray-400);\r\n  }\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4 {\r\n    margin: 24px 0 16px;\r\n  }\r\n  h1 {\r\n    font-size: 2em;\r\n  }\r\n  h2 {\r\n    font-size: 1.5em;\r\n  }\r\n  h3 {\r\n    font-size: 1.25em;\r\n  }\r\n  h4 {\r\n    font-size: 1em;\r\n  }\r\n\r\n  blockquote {\r\n    margin: 0;\r\n    padding: 2px;\r\n    border-left: 3px solid var(--soft-blue-400);\r\n    background-color: var(--soft-blue-50);\r\n    \r\n    > p {\r\n      margin-left: 16px;\r\n      white-space: pre-line;\r\n    }\r\n\r\n    * {\r\n      color: var(--gray-700);\r\n    }\r\n  }\r\n\r\n}`;\r\n\r\nexport default styleForMarkdown;\r\n","import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { coldarkCold as style } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\ninterface ICode {\r\n  className: string | undefined;\r\n  children: string | string[];\r\n}\r\n\r\ninterface IPre {\r\n  children: JSX.Element;\r\n}\r\n\r\nconst CodeConfig = ({ className, children }: ICode) => {\r\n  const myStyle = {\r\n    borderRadius: '4px',\r\n    padding: '16px',\r\n    margin: '8px 0',\r\n    backgroundColor: 'var(--soft-blue-100)',\r\n  };\r\n  let language = 'text';\r\n  if (className && className.startsWith('lang-')) {\r\n    language = className.replace('lang-', '');\r\n  }\r\n  return (\r\n    <>\r\n      {/* 복사 기능을 위한 보조 요소 추가 */}\r\n      <div></div>\r\n      <SyntaxHighlighter\r\n        language={language}\r\n        style={style}\r\n        customStyle={myStyle}\r\n        wrapLines={true}\r\n        children={children}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst PreConfig = ({ children, ...rest }: IPre) => {\r\n  if ('type' in children && children['type'] === 'code') {\r\n    return CodeConfig(children['props']);\r\n  }\r\n  return (\r\n    <pre style={{ borderRadius: '4px' }} {...rest}>\r\n      {children}\r\n    </pre>\r\n  );\r\n};\r\n\r\nexport default PreConfig;\r\n","import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.p`\r\n  display: inline-block;\r\n  font-size: 1em;\r\n  margin: 0 4px;\r\n  color: var(--gray-600);\r\n`;\r\n\r\nconst Middot = () => {\r\n  return <Wrapper className=\"details-middot\">&middot;</Wrapper>;\r\n};\r\n\r\nexport default Middot;\r\n","import styled from 'styled-components';\r\nimport { Endpoints } from '@octokit/types';\r\nimport { modifyDatetime, useLabelAllCheckbox } from '../../functions';\r\nimport Markdown from 'markdown-to-jsx';\r\nimport styleForMarkdown from '../../lib/StyleForMarkdown';\r\nimport PreConfig from '../../lib/MarkdownConfig';\r\nimport { Middot } from '../details';\r\n\r\ntype listUserReposIssuesResponse =\r\n  Endpoints['GET /repos/{owner}/{repo}/issues']['response']['data'];\r\n\r\nexport interface IArticleProps {\r\n  data: listUserReposIssuesResponse | null | undefined;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst Container = styled.section`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  float: right;\r\n  width: calc(100% - 200px);\r\n  margin-bottom: 60px;\r\n  padding: 12px;\r\n  animation: 1s fadeInDown ease-out;\r\n  animation-fill-mode: both;\r\n`;\r\n\r\nconst Subject = styled.header`\r\n  flex: auto;\r\n  /* border-bottom: 2px solid var(--gray-500); */\r\n  .article-subject {\r\n    font-size: 52px;\r\n    font-weight: 600;\r\n    margin: 0.75em 0 0.75em;\r\n  }\r\n  .article-info {\r\n    text-align: right;\r\n    font-size: 14px;\r\n    padding: 24px;\r\n    color: var(--gray-600);\r\n  }\r\n`;\r\n\r\nconst Body = styled.article`\r\n  display: block;\r\n  padding: 16px;\r\n  margin: 8px 0 8px;\r\n  font-size: 15px;\r\n  border: 1px solid var(--soft-blue-200);\r\n  border-radius: 4px;\r\n\r\n  ${styleForMarkdown}\r\n`;\r\n\r\nconst Article = ({ data, isLoading }: IArticleProps) => {\r\n  const realData = data?.[0];\r\n  const { kr } = modifyDatetime(realData?.created_at);\r\n  const writer = realData?.user?.login!;\r\n\r\n  useLabelAllCheckbox(data);\r\n\r\n  return (\r\n    <Container>\r\n      <Subject>\r\n        <p className=\"article-subject\">\r\n          {realData !== undefined ? realData.title.split('[BLOG] ')[1] : ''}\r\n        </p>\r\n        <div className=\"article-info\">\r\n          {writer}\r\n          <Middot />\r\n          {kr}\r\n          {/* <Middot/>{commentsCount} */}\r\n        </div>\r\n      </Subject>\r\n      <Body>\r\n        <Markdown\r\n          options={{\r\n            overrides: {\r\n              pre: PreConfig,\r\n            },\r\n          }}\r\n        >\r\n          {realData !== undefined\r\n            ? realData.body!.split('---').slice(1).join('---')\r\n            : ''}\r\n        </Markdown>\r\n      </Body>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.aside`\r\n  position: absolute;\r\n  left: -12px;\r\n  border: 2px solid black;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst FloatMenu = () => {\r\n  return <Container>TEST!</Container>;\r\n};\r\n\r\nexport default FloatMenu;\r\n","const NoData = () => {\r\n  return <>123</>;\r\n};\r\n\r\nexport default NoData;\r\n","import { modifyDatetime, modQueryString, useConsole } from '../../functions';\r\nimport styled from 'styled-components';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { FaGithub } from 'react-icons/fa';\r\nimport { IBlogProps } from '../../pages/Blog';\r\nimport NoData from './NoData';\r\nimport { Middot } from '../details';\r\n\r\nconst Container = styled.section`\r\n  float: right;\r\n  width: calc(100% - 200px);\r\n  margin-top: 60px;\r\n  margin-bottom: 60px;\r\n  padding: 12px;\r\n`;\r\n\r\nconst Single = styled.article`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 8px;\r\n  padding: 8px;\r\n  gap: 4px;\r\n  border-bottom: 2px solid var(--gray-300);\r\n  :hover {\r\n    background-color: var(--gray-200);\r\n    transition: all 0.3s;\r\n  }\r\n  .blog-info-wrapper {\r\n    display: flex;\r\n    vertical-align: middle;\r\n    align-items: center;\r\n  }\r\n  .blog-subject {\r\n    display: flex;\r\n    margin: 0;\r\n    > a {\r\n      flex: auto;\r\n      text-align: left;\r\n      color: var(--soft-blue-600);\r\n      :hover {\r\n        color: var(--soft-blue-700);\r\n        background-color: var(--soft-blue-50);\r\n        transition: all 0.3s;\r\n      }\r\n    }\r\n  }\r\n  .blog-alias {\r\n    display: inline-block;\r\n    font-size: 0.875rem;\r\n    margin: 0 4px;\r\n    color: var(--gray-500);\r\n  }\r\n  .blog-category {\r\n    font-size: 0.875rem;\r\n    margin: 0 4px;\r\n    color: var(--soft-orange-600);\r\n    font-weight: 500;\r\n    padding: 2px 8px;\r\n    border: 1px solid var(--soft-orange-200);\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    :hover {\r\n      color: white;\r\n      background-color: var(--soft-orange-600);\r\n      transition: all 0.3s;\r\n    }\r\n  }\r\n  .blog-issue-link {\r\n    display: flex;\r\n    vertical-align: middle;\r\n    align-items: center;\r\n    font-size: 0.75rem;\r\n    margin: 0 4px;\r\n    padding: 2px 4px;\r\n    border: 1px solid var(--gray-400);\r\n    border-radius: 4px;\r\n    .blog-issue-link-icon {\r\n      margin-right: 4px;\r\n    }\r\n    :hover {\r\n      background-color: var(--gray-300);\r\n      transition: all 0.3s;\r\n    }\r\n  }\r\n  .blog-description {\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n    text-align: start;\r\n    font-size: 1rem;\r\n    line-height: 1.5rem;\r\n    margin-bottom: 8px;\r\n    height: 3rem;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n`;\r\n\r\nconst Issue = ({ data, isLoading }: IBlogProps) => {\r\n  const { search } = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  useConsole(search);\r\n  const handleTagClick = (key: string) => (e: any) => {\r\n    navigate(`/blog?tags=${key}`);\r\n  };\r\n\r\n  const filtered = data?.filter((issue) => {\r\n    const queryObj = modQueryString(search);\r\n    if (queryObj.tags === undefined) return true;\r\n    return issue.labels\r\n      .map((issue) => typeof issue !== 'string' && issue.name)\r\n      .includes(queryObj.tags);\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading ? (\r\n        <>Loading.................................</>\r\n      ) : filtered?.length === 0 ? (\r\n        <NoData />\r\n      ) : (\r\n        data\r\n          ?.filter((issue) => {\r\n            const queryObj = modQueryString(search);\r\n            if (queryObj.tags === undefined) return true;\r\n            return issue.labels\r\n              .map((issue) => typeof issue !== 'string' && issue.name)\r\n              .includes(queryObj.tags);\r\n          })\r\n          .map((issue) => {\r\n            const title = issue.title.split('[BLOG] ')[1];\r\n            const { labels, body } = issue;\r\n\r\n            const tag = labels.map((label) =>\r\n              typeof label === 'string' ? label : label.name\r\n            );\r\n            const description = body?.split('---')[0].trim();\r\n            const { alias } = modifyDatetime(issue.created_at);\r\n            return (\r\n              <Single key={issue.id}>\r\n                <h2 className=\"blog-subject\">\r\n                  <Link to={`/blog/${issue.number}`}>{title}</Link>\r\n                </h2>\r\n                <div className=\"blog-info-wrapper\">\r\n                  <span className=\"blog-alias\">{alias}</span>\r\n                  <Middot />\r\n                  {tag.map((ele, idx) => {\r\n                    if (\r\n                      ele !== undefined &&\r\n                      ele !== 'Blog' &&\r\n                      ele[0].toUpperCase() === ele[0]\r\n                    )\r\n                      return (\r\n                        <span\r\n                          key={idx}\r\n                          className=\"blog-category\"\r\n                          onClick={handleTagClick(ele)}\r\n                        >\r\n                          {ele}\r\n                        </span>\r\n                      );\r\n                    else return null;\r\n                  })}\r\n                  <Middot />\r\n                  <a\r\n                    className=\"blog-issue-link\"\r\n                    href={issue.html_url}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    <FaGithub className=\"blog-issue-link-icon\" />\r\n                    Github Issues\r\n                  </a>\r\n                </div>\r\n                <div className=\"blog-description\">{description}</div>\r\n              </Single>\r\n            );\r\n          })\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Issue;\r\n","import { Link, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { modQueryString } from '../../functions';\r\nimport { IBlogProps } from '../../pages/Blog';\r\nimport FloatMenu from './FloatMenu';\r\n\r\nconst Container = styled.aside`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  float: left;\r\n  font-size: 16px;\r\n  align-items: center;\r\n  padding-top: 60px;\r\n  padding: 60px 12px 0 12px;\r\n  width: 200px;\r\n`;\r\n\r\nconst Subject = styled.header`\r\n  position: relative;\r\n  width: calc(100% - 64px);\r\n  /* text-align: center; */\r\n  font-size: 1.25em;\r\n  font-weight: 600;\r\n  text-align: left;\r\n  margin-bottom: 8px;\r\n\r\n  :before {\r\n    content: '';\r\n    z-index: -1;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 216px;\r\n    height: 20px;\r\n    background: linear-gradient(\r\n      -105deg,\r\n      transparent 0%,\r\n      var(--soft-blue-50) 10%,\r\n      var(--soft-blue-500) 75%\r\n    );\r\n    transform: translate3d(-40px, 8px, 0) scale(0.6);\r\n    border-radius: 2px;\r\n  }\r\n`;\r\n\r\nconst List = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  > a {\r\n    display: flex;\r\n    align-items: stretch;\r\n    width: 172px;\r\n    color: var(--gray-800);\r\n    font-size: 0.9375em;\r\n    &.total {\r\n      margin-bottom: 4px;\r\n      > .label-name {\r\n        color: var(--soft-blue-800);\r\n      }\r\n    }\r\n    > div {\r\n      flex: auto;\r\n      &.label-name {\r\n        text-align: left;\r\n      }\r\n\r\n      &.label-count {\r\n        text-align: right;\r\n        color: var(--gray-500);\r\n      }\r\n    }\r\n    :hover {\r\n      > div {\r\n        &.label-name {\r\n          color: var(--soft-orange-900);\r\n        }\r\n        &.label-count {\r\n          color: var(--gray-800);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SideNav = ({ data, isLoading }: IBlogProps) => {\r\n  const { search } = useLocation();\r\n  const LABELS: { [key: string]: number } = {};\r\n  const queryObj = modQueryString(search);\r\n  data?.forEach((issue) => {\r\n    const { labels } = issue;\r\n    labels\r\n      .map((label) => typeof label === 'string' || label.name)\r\n      .forEach((label) => {\r\n        if (\r\n          typeof label === 'string' &&\r\n          label[0].toUpperCase() === label[0] &&\r\n          !(label === 'Blog')\r\n        )\r\n          LABELS[label] === undefined\r\n            ? (LABELS[label] = 1)\r\n            : typeof label === 'string' && LABELS[label]++;\r\n      });\r\n  });\r\n  const toArr = Object.entries(LABELS);\r\n  /**\r\n   *! 사용되지 않지만 이후 참고용으로 남겨둠\r\n   */\r\n  // eslint-disable-next-line\r\n  const total = toArr.reduce(\r\n    ([_A, count], [_B, cur]) => ['', count + cur],\r\n    ['', 0]\r\n  );\r\n  return (\r\n    <Container>\r\n      <Subject>Tags</Subject>\r\n      <List>\r\n        <a className=\"label-link total\" href=\"/blog\">\r\n          <div className=\"label-name\">Total</div>\r\n          <div className=\"label-count\">({data?.length})</div>\r\n        </a>\r\n        {toArr.map(([label, count], index) => {\r\n          return (\r\n            <Link key={index} className=\"label-link\" to={`/blog?tags=${label}`}>\r\n              <div className=\"label-name\">{label}</div>\r\n              <div className=\"label-count\">({count})</div>\r\n            </Link>\r\n          );\r\n        })}\r\n      </List>\r\n      {/* <FloatMenu /> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import { useEffect, useState } from 'react';\r\nimport { renderMarkdown } from '../../functions';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.article`\r\n  display: inline-block;\r\n`;\r\n\r\n//! 아마 사용되지 않을 예정 XSS 위험.\r\nconst Markdown = ({ body = '' }: { body: string }) => {\r\n  const [data, setData] = useState('');\r\n  const response = renderMarkdown(body);\r\n  useEffect(() => {\r\n    response.then((res) => {\r\n      setData(res.data);\r\n    });\r\n  }, [response]);\r\n  return (\r\n    <Container dangerouslySetInnerHTML={{ __html: data }}></Container>\r\n    // <Blank>\r\n    //   <Transistor options={{ wrapper: 'article', forceBlock: true }}>\r\n    //     {body}\r\n    //   </Transistor>\r\n    // </Blank>\r\n  );\r\n};\r\n\r\nexport default Markdown;\r\n","import { useEffect, useState } from 'react';\r\nimport { getIssues, useBodyColor } from '../functions';\r\nimport { Endpoints } from '@octokit/types';\r\nimport styled from 'styled-components';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Article, Issue, SideNav } from '../components/blog';\r\n\r\ntype listUserReposIssuesResponse =\r\n  Endpoints['GET /repos/{owner}/{repo}/issues']['response']['data'];\r\nexport interface IBlogProps {\r\n  data: listUserReposIssuesResponse | null;\r\n  isLoading: boolean;\r\n}\r\n\r\n// 840px 기준으로 sidebar가 이동해야함\r\nconst Container = styled.main`\r\n  clear: both;\r\n  margin-top: 60px;\r\n  animation: 1s 0.5s fadeIn;\r\n  animation-fill-mode: both;\r\n`;\r\n\r\nconst Blog = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [data, setData] = useState<listUserReposIssuesResponse | null>(null);\r\n  //! 아마 사용되지 않을 상태값. 이후 삭제요망\r\n  const [numbers, setNumbers] = useState<number[]>([]);\r\n  const { number } = useParams();\r\n  const article: listUserReposIssuesResponse | null | undefined = data?.filter(\r\n    (issue) => issue.number === Number(number)\r\n  );\r\n\r\n  /**\r\n   * @constant 글 작성자를 특정합니다. string[]\r\n   */\r\n  const AUTHOR = ['Citysquirrel'];\r\n\r\n  useBodyColor('#f5f5f5');\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getIssues()\r\n      .then((res) => {\r\n        const onlyBlogging = res.data.filter(\r\n          (issue) =>\r\n            issue.title.includes('[BLOG]') &&\r\n            AUTHOR.includes(issue.user?.login!)\r\n        );\r\n        setData(onlyBlogging);\r\n        setNumbers(onlyBlogging.map((issue) => issue.number));\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => console.log('Network Error: ', err));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <SideNav data={data} isLoading={isLoading} />\r\n      {number ? (\r\n        <Article data={article} isLoading={isLoading} />\r\n      ) : (\r\n        <Issue data={data} isLoading={isLoading} />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n"],"names":["isLightColorTone","color","code","slice","firstLetter","parseInt","useScreenBorder","options","useEffect","top","document","getElementById","right","bottom","left","container","footer","footerCopyright","style","height","backgroundColor","width","borderWidth","colorValue","useBodyColor","body","transition","octokitForBlog","Octokit","auth","getIssues","request","owner","repo","modifyDatetime","datetime","undefined","kr","alias","received","Date","now","nowYear","getFullYear","nowMonth","getMonth","nowDay","getDate","nowHour","getHours","nowMin","getMinutes","aMinuteAgo","aHourAgo","aDayAgo","aMonthAgo","aYearAgo","difference","getTime","Math","ceil","toLocaleString","useConsole","state","name","console","log","modQueryString","str","decodeURI","split","map","query","reduce","t","i","k","v","useLabelAllCheckbox","def","querySelectorAll","forEach","input","index","setAttribute","label","createElement","insertAdjacentElement","children","rest","className","language","startsWith","replace","customStyle","borderRadius","padding","margin","wrapLines","CodeConfig","Wrapper","styled","Container","Subject","Body","styleForMarkdown","data","realData","isLoading","created_at","writer","user","login","title","overrides","pre","PreConfig","join","Single","search","useLocation","navigate","useNavigate","filtered","filter","issue","queryObj","tags","labels","includes","length","tag","description","trim","to","number","ele","idx","toUpperCase","onClick","key","e","href","html_url","target","rel","id","List","LABELS","toArr","Object","entries","count","useState","setIsLoading","setData","setNumbers","useParams","article","Number","AUTHOR","then","res","onlyBlogging","catch","err"],"sourceRoot":""}