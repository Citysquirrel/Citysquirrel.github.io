{"version":3,"file":"static/js/434.0e01b3c4.chunk.js","mappings":"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","sources":["functions/index.tsx","lib/StyleForMarkdown.tsx","lib/MarkdownConfig.tsx","components/details/Middot.tsx","components/blog/Article.tsx","components/blog/FloatMenu.tsx","components/blog/NoData.tsx","components/blog/Issue.tsx","components/blog/SideNav.tsx","components/blog/Markdown.tsx","pages/Blog.tsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { Octokit } from \"octokit\";\r\nimport { FaRegCopy } from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\n\r\nexport function useFadeIn() {\r\n\tuseEffect(() => {\r\n\t\tconsole.log(123);\r\n\t}, []);\r\n}\r\n\r\n/**\r\n * 색상을 받아 해당 색상을 gray톤으로 변환해 hexcode로 리턴합니다.\r\n * @param color 6자리 hex 색상코드\r\n * @param conversion `0: 평균값(default)`, `1: Luma ITU-R BT.601`, `2: Luma ITU-R BT.709`\r\n * @returns 6자리 hex 색상코드\r\n */\r\nexport function colorApplyGrayscale(color: string, conversion: number = 0) {\r\n\t// 색상코드에 #이 존재하는지 판별 후 16진수 숫자만 추출\r\n\tconst code = color[0] === \"#\" ? color.slice(1) : color.slice();\r\n\r\n\t// rgb 각 색상들을 뽑아 10진수로 변환\r\n\tconst red = parseInt(code.slice(0, 2), 16);\r\n\tconst green = parseInt(code.slice(2, 4), 16);\r\n\tconst blue = parseInt(code.slice(4, 6), 16);\r\n\r\n\t// 각 grayscale 계산식\r\n\tconst avg = ((red + green + blue) / 3) >> 0;\r\n\tconst luma601 = (red * 0.299 + green * 0.587 + blue * 0.114) >> 0;\r\n\tconst luma709 = (red * 0.2126 + green * 0.7152 + blue * 0.0722) >> 0;\r\n\r\n\t// 비트 계산 후 hexcode로 리턴\r\n\tconst formulas = [avg, luma601, luma709];\r\n\tconst conv = formulas[conversion];\r\n\tconst gray = (conv << 16) | (conv << 8) | conv;\r\n\r\n\treturn \"#\" + gray.toString(16).padStart(6, \"0\");\r\n}\r\n\r\n/**\r\n * 색상을 받아 해당 색상을 반전시켜 hexcode로 리턴합니다.\r\n * @param color 6자리 hex 색상코드\r\n * @returns 6자리 hex 색상코드\r\n */\r\nexport function colorNegate(color: string) {\r\n\t// 색상코드에 #이 존재하는지 판별 후 16진수 숫자만 추출\r\n\tconst code = color[0] === \"#\" ? color.slice(1) : color.slice();\r\n\r\n\tconst hex = Number(\"0x\" + code); // 0xFFFFFF 형태의 16진수로변환\r\n\tconst negated = hex ^ 0xffffff; // 색상반전: XOR 기호로 비트 계산\r\n\r\n\treturn \"#\" + negated.toString(16).padStart(6, \"0\");\r\n}\r\n\r\n/**\r\n * 색상코드 받아서 해당 색상코드의 반전색에 해당하는 흑백색을 리턴합니다.\r\n * @param color 6자리 색상코드\r\n * @returns 규칙에 따라 검정색(\"#141414\") 또는 백색(\"#fcfcfc\")\r\n */\r\nfunction fontColorByContrastRule(color: string) {\r\n\tconst code = color[0] === \"#\" ? color.slice(1) : color.slice();\r\n\tconst hex = Number(\"0x\" + code);\r\n\r\n\tconst red = (hex >>> 16) & 255;\r\n\tconst green = (hex >>> 8) & 255;\r\n\tconst blue = hex & 255;\r\n\tconst yiq = (red * 299 + green * 587 + blue * 114) / 1000;\r\n\treturn yiq >= 128 ? \"#141414\" : \"#fcfcfc\";\r\n}\r\n\r\n/**\r\n * 전체 화면 테두리를 주어진 두께와 배경색으로 변경합니다. 적용된 컴포넌트가 Unmount될 때 기본값(`2px`, `soft-blue-100`)으로 되돌립니다.\r\n * @param options 각 Element 별 크기 속성을 담은 옵션\r\n * @param color 변경될 배경색\r\n */\r\nexport function useScreenBorder(\r\n\toptions: {\r\n\t\ttop: string;\r\n\t\tright: string;\r\n\t\tbottom: string;\r\n\t\tleft: string;\r\n\t\tcontainer: string;\r\n\t},\r\n\tcolor: string = \"#c4e0fa\"\r\n) {\r\n\tuseEffect(() => {\r\n\t\tconst top = document.getElementById(\"top\");\r\n\t\tconst right = document.getElementById(\"right\");\r\n\t\tconst bottom = document.getElementById(\"bottom\");\r\n\t\tconst left = document.getElementById(\"left\");\r\n\t\tconst container = document.getElementById(\"container\");\r\n\t\tconst footer = document.getElementById(\"footer\");\r\n\t\tconst footerCopyright = document.getElementById(\"footer-copyright\");\r\n\t\tconst footerEmail = document.getElementById(\"footer-email\");\r\n\t\tconst footerGithub = document.getElementById(\"footer-github\");\r\n\t\tconst contrastColor = fontColorByContrastRule(color);\r\n\t\tconst footerCopyColor = contrastColor === \"#141414\" ? \"#424242\" : \"#dadada\";\r\n\t\tif (top !== null) {\r\n\t\t\ttop.style.height = options.top;\r\n\t\t\ttop.style.backgroundColor = color;\r\n\t\t}\r\n\t\tif (right !== null) {\r\n\t\t\tright.style.width = options.right;\r\n\t\t\tright.style.backgroundColor = color;\r\n\t\t}\r\n\t\tif (bottom !== null) {\r\n\t\t\tbottom.style.height = options.bottom;\r\n\t\t\tbottom.style.backgroundColor = color;\r\n\t\t}\r\n\t\tif (left !== null) {\r\n\t\t\tleft.style.width = options.left;\r\n\t\t\tleft.style.backgroundColor = color;\r\n\t\t}\r\n\t\tif (container !== null) {\r\n\t\t\tcontainer.style.borderWidth = options.container;\r\n\t\t}\r\n\t\tif (footer !== null) {\r\n\t\t\tfooter.style.backgroundColor = color;\r\n\t\t}\r\n\t\tif (footerCopyright !== null) {\r\n\t\t\tfooterCopyright.style.color = footerCopyColor;\r\n\t\t}\r\n\t\tif (footerEmail !== null) {\r\n\t\t\tfooterEmail.style.transition = \"color 0.5s\";\r\n\t\t\tfooterEmail.style.color = contrastColor;\r\n\t\t}\r\n\t\tif (footerGithub !== null) {\r\n\t\t\tfooterGithub.style.transition = \"color 0.5s\";\r\n\t\t\tfooterGithub.style.color = contrastColor;\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tif (top !== null) {\r\n\t\t\t\ttop.style.height = \"2px\";\r\n\t\t\t\ttop.style.backgroundColor = \"#c4e0fa\";\r\n\t\t\t}\r\n\t\t\tif (right !== null) {\r\n\t\t\t\tright.style.width = \"2px\";\r\n\t\t\t\tright.style.backgroundColor = \"#c4e0fa\";\r\n\t\t\t}\r\n\t\t\tif (bottom !== null) {\r\n\t\t\t\tbottom.style.height = \"2px\";\r\n\t\t\t\tbottom.style.backgroundColor = \"#c4e0fa\";\r\n\t\t\t}\r\n\t\t\tif (left !== null) {\r\n\t\t\t\tleft.style.width = \"2px\";\r\n\t\t\t\tleft.style.backgroundColor = \"#c4e0fa\";\r\n\t\t\t}\r\n\t\t\tif (container !== null) {\r\n\t\t\t\tcontainer.style.borderWidth = \"2px\";\r\n\t\t\t}\r\n\t\t\tif (footer !== null) {\r\n\t\t\t\tfooter.style.backgroundColor = \"#c4e0fa\";\r\n\t\t\t}\r\n\t\t\tif (footerCopyright !== null) {\r\n\t\t\t\tfooterCopyright.style.color = \"#424242\";\r\n\t\t\t}\r\n\t\t\tif (footerEmail !== null) {\r\n\t\t\t\tfooterEmail.style.color = \"#141414\";\r\n\t\t\t}\r\n\t\t\tif (footerGithub !== null) {\r\n\t\t\t\tfooterGithub.style.color = \"#141414\";\r\n\t\t\t}\r\n\t\t};\r\n\t\t// eslint-disable-next-line\r\n\t}, []);\r\n}\r\n\r\n/**\r\n * body 태그에 stop-scrolling 클래스를 부여합니다.\r\n */\r\nexport function useStopBodyScroll() {\r\n\tuseEffect(() => {\r\n\t\tdocument.body.classList.add(\"stop-scrolling\");\r\n\t\treturn () => {\r\n\t\t\tdocument.body.classList.remove(\"stop-scrolling\");\r\n\t\t};\r\n\t}, []);\r\n}\r\n\r\n/**\r\n * body 태그에 주어진 color를 배경색으로 지정합니다. 언마운트될 경우 #fff로 설정합니다.\r\n * @param color 색상코드\r\n * @returns nothing\r\n */\r\nexport function useBodyColor(color: String) {\r\n\tuseEffect(() => {\r\n\t\tdocument.body.style.transition = \"background-color 0.5s\";\r\n\t\tdocument.body.style.backgroundColor = `${color}`;\r\n\t\treturn () => {\r\n\t\t\tdocument.body.style.backgroundColor = \"#fff\";\r\n\t\t};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n}\r\n\r\n/**\r\n * Octokit 클라이언트 셋업입니다. Public 권한으로 실행되는 octokit입니다.\r\n */\r\nexport const octokitForBlog = new Octokit({\r\n\tauth:\r\n\t\t// process.env.REACT_APP_PERSONAL_TOKEN\r\n\t\t// process.env.GITHUB_TOKEN,\r\n\t\t\"\",\r\n});\r\n\r\n/**\r\n * 본 레포의 issues 탭 정보를 받아옵니다.\r\n * @returns issues 탭 정보를 담은 Promise 객체\r\n */\r\nexport function getIssues() {\r\n\treturn octokitForBlog.request(\"GET /repos/{owner}/{repo}/issues\", {\r\n\t\towner: \"Citysquirrel\",\r\n\t\trepo: \"citysquirrel.github.io\",\r\n\t});\r\n}\r\n\r\n/**\r\n * 깃허브 OAuth 인증을 수행합니다(Redirect).\r\n * {@link https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps}\r\n */\r\nexport function execGithubLogin() {\r\n\twindow.location.assign(\"https://github.com/login/oauth/authorize?client_id=dbbd22f1eae2c8421188\");\r\n}\r\n\r\n/**\r\n * 액세스 토큰을 사용해 Github 유저 인증을 실행합니다.\r\n * {@link https://docs.github.com/en/rest/users/users#get-the-authenticated-user}\r\n */\r\nexport function getUserInfo() {\r\n\tconst octokit = new Octokit({\r\n\t\tauth: \"YOUR-TOKEN\",\r\n\t});\r\n\toctokit.request(\"GET /user\", {});\r\n\t//Authorization: Bearer OAUTH-TOKEN\r\n\t// axios.get(\"https://api.github.com/user\",{headers: {authorization:`Bearer ${token}` }})\r\n}\r\n\r\n/**\r\n * 마크다운 형식 문자열을 HTML 형식 문자열로 바꿔줍니다.\r\n * @param text 마크다운 형식의 문자열\r\n * @returns HTML 형식의 문자열을 담은 Promise\r\n */\r\nexport async function renderMarkdown(text: string) {\r\n\treturn await octokitForBlog.request(\"POST /markdown\", { text });\r\n}\r\n\r\n/**\r\n * datetime을 문자열로 받아 로컬시간과 작성시점으로부터의 시간차를 한글 형태로 바꿔줍니다.\r\n * @param datetime `string` datetime 형식의 문자열\r\n * @returns `{ kr: 한글형태의 로컬시간, alias: 작성시점으로부터의 시간차 }`\r\n */\r\nexport const modifyDatetime = (datetime: string | undefined) => {\r\n\t// datetime: UTC 시간\r\n\tif (datetime === undefined) return { kr: undefined, alias: undefined };\r\n\tconst received = new Date(datetime);\r\n\tconst now = new Date();\r\n\tconst nowYear = now.getFullYear();\r\n\tconst nowMonth = now.getMonth();\r\n\tconst nowDay = now.getDate();\r\n\tconst nowHour = now.getHours();\r\n\tconst nowMin = now.getMinutes();\r\n\r\n\t// 몇분전, 몇시간전, 몇일전, 몇달전, 몇년전\r\n\t// 1분 한시간 하루 한달 일년\r\n\tconst aMinuteAgo = new Date(nowYear, nowMonth, nowDay, nowHour, nowMin - 1);\r\n\tconst aHourAgo = new Date(nowYear, nowMonth, nowDay, nowHour - 1, nowMin);\r\n\tconst aDayAgo = new Date(nowYear, nowMonth, nowDay - 1, nowHour, nowMin);\r\n\tconst aMonthAgo = new Date(nowYear, nowMonth - 1, nowDay, nowHour, nowMin);\r\n\tconst aYearAgo = new Date(nowYear - 1, nowMonth, nowDay, nowHour, nowMin);\r\n\tconst difference = now.getTime() - received.getTime();\r\n\tlet alias;\r\n\tif (aMinuteAgo <= received) {\r\n\t\talias = \"방금 전\";\r\n\t} else if (aHourAgo < received) {\r\n\t\talias = `${Math.ceil(difference / 1000 / 60)}분 전`;\r\n\t} else if (aDayAgo < received) {\r\n\t\talias = `${Math.ceil(difference / 1000 / 60 / 60)}시간 전`;\r\n\t} else if (aMonthAgo < received) {\r\n\t\talias = `${Math.ceil(difference / 1000 / 60 / 60 / 24)}일 전`;\r\n\t} else if (aYearAgo < received) {\r\n\t\talias = `${Math.ceil(difference / 1000 / 60 / 60 / 24 / 30)}개월 전`;\r\n\t} else {\r\n\t\talias = `${Math.ceil(difference / 1000 / 60 / 60 / 24 / 30 / 12)}년 전`;\r\n\t}\r\n\treturn { kr: received.toLocaleString(\"KR\"), alias };\r\n};\r\n\r\n/**\r\n * 임의의 변수를 받아 해당 변수가 변화했을 때 변수를 console.log로 찍어줍니다.\r\n * @param state 임의의 변수\r\n * @returns 변수의 이전 상태\r\n */\r\nexport function useConsole(state: any, name: string | undefined = \"console\") {\r\n\tconst text = `${state}`;\r\n\tconst methods = [console.log(state), console.count(state)];\r\n\tuseEffect(() => {\r\n\t\tconsole.log(`${name}: `, state);\r\n\t\t// eslint-disable-next-line\r\n\t}, [state]);\r\n\treturn state;\r\n}\r\n\r\ninterface IQueryObject {\r\n\t[key: string]: string;\r\n}\r\n\r\n/**\r\n * 쿼리스트링을 받아 키-값 객체 형태로 변환합니다.\r\n * @param str `QueryString`\r\n * @returns `key-value Object`\r\n */\r\nexport function modQueryString(str: string | undefined) {\r\n\tconst decoded = typeof str === \"string\" ? decodeURI(str) : \"\";\r\n\tconst array = decoded\r\n\t\t.slice(1)\r\n\t\t.split(\"&\")\r\n\t\t.map((query) => query.split(\"=\"));\r\n\r\n\tconst object = array.reduce<IQueryObject>((t, [k, v], i) => {\r\n\t\tt[k] = v;\r\n\t\treturn t;\r\n\t}, {});\r\n\r\n\treturn object;\r\n}\r\n\r\n/**\r\n * 실행한 컴포넌트가 존재하는 스크린에서, 모든 체크박스를 찾아 라벨을 추가해줍니다.\r\n * @param def 의존성 배열\r\n */\r\nexport const useLabelAllCheckbox = (def: any = null) => {\r\n\tuseEffect(() => {\r\n\t\tconst inputs = document.querySelectorAll(\"input\");\r\n\r\n\t\tinputs.forEach((input, index) => {\r\n\t\t\tinput.setAttribute(\"id\", `check${index}`);\r\n\t\t\tconst label = document.createElement(\"label\");\r\n\t\t\tlabel.setAttribute(\"for\", `check${index}`);\r\n\t\t\tinput.insertAdjacentElement(\"afterend\", label);\r\n\t\t});\r\n\t}, [def]);\r\n};\r\n\r\nexport const useCopyAllCodeblock = (def: any = null) => {\r\n\tconst Button = styled.button``;\r\n\tuseEffect(() => {\r\n\t\tdocument.querySelectorAll(\"pre\").forEach((pre) => {\r\n\t\t\tconst code = pre.childNodes[0];\r\n\t\t\tconst handleClick = (e: React.MouseEvent) => {\r\n\t\t\t\tnavigator.clipboard.writeText(code.textContent!);\r\n\t\t\t};\r\n\t\t\tconst jsx = (\r\n\t\t\t\t<Button onClick={handleClick}>\r\n\t\t\t\t\t<FaRegCopy />\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t});\r\n\t\t// eslint-disable-next-line\r\n\t}, [def]);\r\n};\r\n","export const styleForMarkdown = `\r\n  text-align: justify;\r\n  \r\n  a {\r\n    color: var(--soft-blue-600);\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n\r\n  p {\r\n    > code {\r\n      background-color: var(--gray-300);\r\n      padding: 2px 6px;\r\n      border-radius: 4px;\r\n    }\r\n  }\r\n\r\n  pre {\r\n    display: flex;\r\n    width: 100%;\r\n    > code {\r\n      flex: auto;\r\n      overflow-x: auto;\r\n      padding: 4px;\r\n      ::-webkit-scrollbar {\r\n        display: block;\r\n        height: 8px;\r\n      }\r\n      ::-webkit-scrollbar-thumb {\r\n        \r\n        background-color: var(--soft-blue-400);\r\n        border-radius: 4px;\r\n      }\r\n    }\r\n  }\r\n\r\n  li::marker {\r\n    color: var(--soft-blue-800);\r\n  }\r\n\r\n  li > p {\r\n    margin: 0;\r\n  }\r\n\r\n  input[type=\"checkbox\"] {\r\n    display: none;\r\n  }\r\n\r\n  input[type=\"checkbox\"] + label {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 1em;\r\n    height: 1em;\r\n    margin-right: 4px;\r\n    border: 1px solid var(--gray-800);\r\n    border-radius: 4px;\r\n    transform: translateY(2px);\r\n    cursor: pointer;\r\n    :hover {\r\n        box-shadow: 0 0 2px 1px var(--gray-500);\r\n    }\r\n  }\r\n\r\n  input[type=\"checkbox\"]:checked + label::after {\r\n    position: absolute;\r\n    content: \"\";\r\n    background-color: var(--soft-blue-500);\r\n    width: 0.8em;\r\n    height: 0.8em;\r\n    border-radius: 3px;\r\n  }\r\n\r\n  h1,\r\n  h2 {\r\n    border-bottom: 1px solid var(--gray-400);\r\n  }\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4 {\r\n    margin: 24px 0 16px;\r\n  }\r\n  h1 {\r\n    font-size: 2em;\r\n  }\r\n  h2 {\r\n    font-size: 1.5em;\r\n  }\r\n  h3 {\r\n    font-size: 1.25em;\r\n  }\r\n  h4 {\r\n    font-size: 1em;\r\n  }\r\n\r\n  blockquote {\r\n    margin: 0;\r\n    padding: 2px;\r\n    border-left: 3px solid var(--soft-blue-400);\r\n    background-color: var(--soft-blue-50);\r\n    \r\n    > p {\r\n      margin-left: 16px;\r\n      white-space: pre-line;\r\n    }\r\n\r\n    * {\r\n      color: var(--gray-700);\r\n    }\r\n  }\r\n\r\n}`;\r\n\r\nexport default styleForMarkdown;\r\n","import { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { coldarkCold as style } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\ninterface ICode {\r\n\tclassName: string | undefined;\r\n\tchildren: string | string[];\r\n}\r\n\r\ninterface IPre {\r\n\tchildren: JSX.Element;\r\n}\r\n\r\nconst CodeConfig = ({ className, children }: ICode) => {\r\n\tconst myStyle = {\r\n\t\tborderRadius: \"4px\",\r\n\t\tpadding: \"16px\",\r\n\t\tmargin: \"8px 0\",\r\n\t\tbackgroundColor: \"var(--soft-blue-100)\",\r\n\t};\r\n\tlet language = \"text\";\r\n\tif (className && className.startsWith(\"lang-\")) {\r\n\t\tlanguage = className.replace(\"lang-\", \"\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* 복사 기능을 위한 보조 요소 추가 */}\r\n\t\t\t<div></div>\r\n\t\t\t<SyntaxHighlighter language={language} style={style} customStyle={myStyle} wrapLines={true} children={children} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst PreConfig = ({ children, ...rest }: IPre) => {\r\n\tif (\"type\" in children && children[\"type\"] === \"code\") {\r\n\t\treturn CodeConfig(children[\"props\"]);\r\n\t}\r\n\treturn (\r\n\t\t<pre style={{ borderRadius: \"4px\" }} {...rest}>\r\n\t\t\t{children}\r\n\t\t</pre>\r\n\t);\r\n};\r\n\r\nexport default PreConfig;\r\n","import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.p`\r\n  display: inline-block;\r\n  font-size: 1em;\r\n  margin: 0 4px;\r\n  color: var(--gray-600);\r\n`;\r\n\r\nconst Middot = () => {\r\n  return <Wrapper className=\"details-middot\">&middot;</Wrapper>;\r\n};\r\n\r\nexport default Middot;\r\n","import styled from 'styled-components';\r\nimport { Endpoints } from '@octokit/types';\r\nimport { modifyDatetime, useLabelAllCheckbox } from '../../functions';\r\nimport Markdown from 'markdown-to-jsx';\r\nimport styleForMarkdown from '../../lib/StyleForMarkdown';\r\nimport PreConfig from '../../lib/MarkdownConfig';\r\nimport { Middot } from '../details';\r\n\r\ntype listUserReposIssuesResponse =\r\n  Endpoints['GET /repos/{owner}/{repo}/issues']['response']['data'];\r\n\r\nexport interface IArticleProps {\r\n  data: listUserReposIssuesResponse | null | undefined;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst Container = styled.section`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  float: right;\r\n  width: calc(100% - 200px);\r\n  margin-bottom: 60px;\r\n  padding: 12px;\r\n  animation: 1s fadeInDown ease-out;\r\n  animation-fill-mode: both;\r\n`;\r\n\r\nconst Subject = styled.header`\r\n  flex: auto;\r\n  /* border-bottom: 2px solid var(--gray-500); */\r\n  border: 1px solid var(--gray-400);\r\n  border-radius: 4px;\r\n\r\n  .article-subject {\r\n    font-size: 52px;\r\n    font-weight: 600;\r\n    margin: 0.75em 0.5em 0.75em;\r\n    /* border-top: 2px solid var(--soft-blue-400); */\r\n    /* border-bottom: 2px solid var(--soft-blue-400); */\r\n    word-break: keep-all;\r\n  }\r\n  .article-info {\r\n    text-align: right;\r\n    font-size: 14px;\r\n    padding: 24px;\r\n    color: var(--gray-600);\r\n  }\r\n`;\r\n\r\nconst Body = styled.article`\r\n  display: block;\r\n  padding: 16px;\r\n  margin: 8px 0 8px;\r\n  font-size: 15px;\r\n  border: 1px solid var(--soft-blue-200);\r\n  border-radius: 4px;\r\n\r\n  ${styleForMarkdown}\r\n`;\r\n\r\nconst Article = ({ data, isLoading }: IArticleProps) => {\r\n  const realData = data?.[0];\r\n  const { kr } = modifyDatetime(realData?.created_at);\r\n  const writer = realData?.user?.login!;\r\n\r\n  useLabelAllCheckbox(data);\r\n\r\n  return (\r\n    <Container>\r\n      <Subject>\r\n        <p className=\"article-subject\">\r\n          {realData !== undefined ? realData.title.split('[BLOG] ')[1] : ''}\r\n        </p>\r\n        <div className=\"article-info\">\r\n          {writer}\r\n          <Middot />\r\n          {kr}\r\n          {/* <Middot/>{commentsCount} */}\r\n        </div>\r\n      </Subject>\r\n      <Body>\r\n        <Markdown\r\n          options={{\r\n            overrides: {\r\n              pre: PreConfig,\r\n            },\r\n          }}\r\n        >\r\n          {realData !== undefined\r\n            ? realData.body!.split('---').slice(1).join('---')\r\n            : ''}\r\n        </Markdown>\r\n      </Body>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.aside`\r\n  position: absolute;\r\n  left: -12px;\r\n  border: 2px solid black;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst FloatMenu = () => {\r\n  return <Container>TEST!</Container>;\r\n};\r\n\r\nexport default FloatMenu;\r\n","const NoData = () => {\r\n  return <>123</>;\r\n};\r\n\r\nexport default NoData;\r\n","import { modifyDatetime, modQueryString, useConsole } from '../../functions';\r\nimport styled from 'styled-components';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { FaGithub } from 'react-icons/fa';\r\nimport { IBlogProps } from '../../pages/Blog';\r\nimport NoData from './NoData';\r\nimport { Middot } from '../details';\r\n\r\nconst Container = styled.section`\r\n  float: right;\r\n  width: calc(100% - 200px);\r\n  margin-bottom: 60px;\r\n  padding: 12px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n  text-align: left;\r\n  padding-left: 36px;\r\n`;\r\n\r\nconst Single = styled.article`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 8px;\r\n  padding: 8px;\r\n  gap: 4px;\r\n  border-bottom: 2px solid var(--gray-300);\r\n  :hover {\r\n    background-color: var(--gray-200);\r\n    transition: all 0.3s;\r\n  }\r\n  .blog-info-wrapper {\r\n    display: flex;\r\n    vertical-align: middle;\r\n    align-items: center;\r\n  }\r\n  .blog-subject {\r\n    display: flex;\r\n    margin: 0;\r\n    > a {\r\n      flex: auto;\r\n      text-align: left;\r\n      color: var(--soft-blue-600);\r\n      :hover {\r\n        color: var(--soft-blue-700);\r\n        background-color: var(--soft-blue-50);\r\n        transition: all 0.3s;\r\n      }\r\n    }\r\n  }\r\n  .blog-alias {\r\n    display: inline-block;\r\n    font-size: 0.875rem;\r\n    margin: 0 4px;\r\n    color: var(--gray-500);\r\n  }\r\n  .blog-category {\r\n    font-size: 0.875rem;\r\n    margin: 0 4px;\r\n    color: var(--soft-orange-600);\r\n    font-weight: 500;\r\n    padding: 2px 8px;\r\n    border: 1px solid var(--soft-orange-200);\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    :hover {\r\n      color: white;\r\n      background-color: var(--soft-orange-600);\r\n      transition: all 0.3s;\r\n    }\r\n  }\r\n  .blog-issue-link {\r\n    display: flex;\r\n    vertical-align: middle;\r\n    align-items: center;\r\n    font-size: 0.75rem;\r\n    margin: 0 4px;\r\n    padding: 2px 4px;\r\n    border: 1px solid var(--gray-400);\r\n    border-radius: 4px;\r\n    .blog-issue-link-icon {\r\n      margin-right: 4px;\r\n    }\r\n    :hover {\r\n      background-color: var(--gray-300);\r\n      transition: all 0.3s;\r\n    }\r\n  }\r\n  .blog-description {\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n    text-align: start;\r\n    font-size: 1rem;\r\n    line-height: 1.5rem;\r\n    margin-bottom: 8px;\r\n    height: 3rem;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n`;\r\n\r\nconst Issue = ({ data, isLoading }: IBlogProps) => {\r\n  const { search } = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  useConsole(search);\r\n  const handleTagClick = (key: string) => (e: any) => {\r\n    navigate(`/blog?tags=${key}`);\r\n  };\r\n\r\n  const filtered = data?.filter((issue) => {\r\n    const queryObj = modQueryString(search);\r\n    if (queryObj.tags === undefined) return true;\r\n    return issue.labels\r\n      .map((issue) => typeof issue !== 'string' && issue.name)\r\n      .includes(queryObj.tags);\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading ? (\r\n        <>Loading.................................</>\r\n      ) : filtered?.length === 0 ? (\r\n        <NoData />\r\n      ) : (\r\n        <>\r\n          {/* <Title>Blog</Title> */}\r\n          {data\r\n            ?.filter((issue) => {\r\n              const queryObj = modQueryString(search);\r\n              if (queryObj.tags === undefined) return true;\r\n              return issue.labels\r\n                .map((issue) => typeof issue !== 'string' && issue.name)\r\n                .includes(queryObj.tags);\r\n            })\r\n            .map((issue) => {\r\n              const title = issue.title.split('[BLOG] ')[1];\r\n              const { labels, body } = issue;\r\n\r\n              const tag = labels.map((label) =>\r\n                typeof label === 'string' ? label : label.name\r\n              );\r\n              const description = body?.split('---')[0].trim();\r\n              const { alias } = modifyDatetime(issue.created_at);\r\n              return (\r\n                <Single key={issue.id}>\r\n                  <h2 className=\"blog-subject\">\r\n                    <Link to={`/blog/${issue.number}`}>{title}</Link>\r\n                  </h2>\r\n                  <div className=\"blog-info-wrapper\">\r\n                    <span className=\"blog-alias\">{alias}</span>\r\n                    <Middot />\r\n                    {tag.map((ele, idx) => {\r\n                      if (\r\n                        ele !== undefined &&\r\n                        ele !== 'Blog' &&\r\n                        ele[0].toUpperCase() === ele[0]\r\n                      )\r\n                        return (\r\n                          <span\r\n                            key={idx}\r\n                            className=\"blog-category\"\r\n                            onClick={handleTagClick(ele)}\r\n                          >\r\n                            {ele}\r\n                          </span>\r\n                        );\r\n                      else return null;\r\n                    })}\r\n                    <Middot />\r\n                    <a\r\n                      className=\"blog-issue-link\"\r\n                      href={issue.html_url}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      <FaGithub className=\"blog-issue-link-icon\" />\r\n                      Github Issues\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"blog-description\">{description}</div>\r\n                </Single>\r\n              );\r\n            })}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Issue;\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { modQueryString } from \"../../functions\";\r\nimport { IBlogProps } from \"../../pages/Blog\";\r\nimport FloatMenu from \"./FloatMenu\";\r\n\r\nconst Container = styled.aside`\r\n\tposition: fixed;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tfloat: left;\r\n\tfont-size: 16px;\r\n\talign-items: center;\r\n\tpadding-top: 60px;\r\n\tpadding: 60px 12px 0 12px;\r\n\twidth: 200px;\r\n`;\r\n\r\nconst Subject = styled.header`\r\n\tposition: relative;\r\n\twidth: calc(100% - 64px);\r\n\t/* text-align: center; */\r\n\tfont-size: 1.25em;\r\n\tfont-weight: 600;\r\n\ttext-align: left;\r\n\tmargin-bottom: 8px;\r\n\r\n\t:before {\r\n\t\tcontent: \"\";\r\n\t\tz-index: -1;\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 216px;\r\n\t\theight: 20px;\r\n\t\tbackground: linear-gradient(-105deg, transparent 0%, var(--soft-blue-50) 10%, var(--soft-blue-500) 75%);\r\n\t\ttransform: translate3d(-40px, 8px, 0) scale(0.6);\r\n\t\tborder-radius: 2px;\r\n\t}\r\n`;\r\n\r\nconst List = styled.section`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\t> a {\r\n\t\tdisplay: flex;\r\n\t\talign-items: stretch;\r\n\t\twidth: 172px;\r\n\t\tcolor: var(--gray-800);\r\n\t\tfont-size: 0.9375em;\r\n\t\t&.total {\r\n\t\t\tmargin-bottom: 4px;\r\n\t\t\t> .label-name {\r\n\t\t\t\tcolor: var(--soft-blue-800);\r\n\t\t\t}\r\n\t\t}\r\n\t\t> div {\r\n\t\t\tflex: auto;\r\n\t\t\t&.label-name {\r\n\t\t\t\ttext-align: left;\r\n\t\t\t}\r\n\r\n\t\t\t&.label-count {\r\n\t\t\t\ttext-align: right;\r\n\t\t\t\tcolor: var(--gray-500);\r\n\t\t\t}\r\n\t\t}\r\n\t\t:hover {\r\n\t\t\t> div {\r\n\t\t\t\t&.label-name {\r\n\t\t\t\t\tcolor: var(--soft-orange-900);\r\n\t\t\t\t}\r\n\t\t\t\t&.label-count {\r\n\t\t\t\t\tcolor: var(--gray-800);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst SideNav = ({ data, isLoading }: IBlogProps) => {\r\n\tconst { search } = useLocation();\r\n\tconst LABELS: { [key: string]: number } = {};\r\n\tconst queryObj = modQueryString(search);\r\n\tdata?.forEach((issue) => {\r\n\t\tconst { labels } = issue;\r\n\t\tlabels\r\n\t\t\t.map((label) => typeof label === \"string\" || label.name)\r\n\t\t\t.forEach((label) => {\r\n\t\t\t\tif (typeof label === \"string\" && label[0].toUpperCase() === label[0] && !(label === \"Blog\"))\r\n\t\t\t\t\tLABELS[label] === undefined ? (LABELS[label] = 1) : typeof label === \"string\" && LABELS[label]++;\r\n\t\t\t});\r\n\t});\r\n\tconst toArr = Object.entries(LABELS);\r\n\t/**\r\n\t *! 사용되지 않지만 이후 참고용으로 남겨둠\r\n\t */\r\n\t// eslint-disable-next-line\r\n\tconst total = toArr.reduce(([_A, count], [_B, cur]) => [\"\", count + cur], [\"\", 0]);\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Subject>Tags</Subject>\r\n\t\t\t<List>\r\n\t\t\t\t<Link className=\"label-link total\" to=\"/blog\">\r\n\t\t\t\t\t<div className=\"label-name\">Total</div>\r\n\t\t\t\t\t<div className=\"label-count\">({data?.length})</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t{toArr.map(([label, count], index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Link key={index} className=\"label-link\" to={`/blog?tags=${label}`}>\r\n\t\t\t\t\t\t\t<div className=\"label-name\">{label}</div>\r\n\t\t\t\t\t\t\t<div className=\"label-count\">({count})</div>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</List>\r\n\t\t\t{/* <FloatMenu /> */}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default SideNav;\r\n","import { useEffect, useState } from 'react';\r\nimport { renderMarkdown } from '../../functions';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.article`\r\n  display: inline-block;\r\n`;\r\n\r\n//! 아마 사용되지 않을 예정 XSS 위험.\r\nconst Markdown = ({ body = '' }: { body: string }) => {\r\n  const [data, setData] = useState('');\r\n  const response = renderMarkdown(body);\r\n  useEffect(() => {\r\n    response.then((res) => {\r\n      setData(res.data);\r\n    });\r\n  }, [response]);\r\n  return (\r\n    <Container dangerouslySetInnerHTML={{ __html: data }}></Container>\r\n    // <Blank>\r\n    //   <Transistor options={{ wrapper: 'article', forceBlock: true }}>\r\n    //     {body}\r\n    //   </Transistor>\r\n    // </Blank>\r\n  );\r\n};\r\n\r\nexport default Markdown;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getIssues, useBodyColor } from \"../functions\";\r\nimport { Endpoints } from \"@octokit/types\";\r\nimport styled from \"styled-components\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Article, Issue, SideNav } from \"../components/blog\";\r\n\r\ntype listUserReposIssuesResponse = Endpoints[\"GET /repos/{owner}/{repo}/issues\"][\"response\"][\"data\"];\r\nexport interface IBlogProps {\r\n\tdata: listUserReposIssuesResponse | null;\r\n\tisLoading: boolean;\r\n}\r\n\r\n// 840px 기준으로 sidebar가 이동해야함\r\nconst Container = styled.main`\r\n\tclear: both;\r\n\tmargin-top: 60px;\r\n\tanimation: 0.2s 0.5s fadeIn;\r\n\tanimation-fill-mode: both;\r\n`;\r\n\r\nconst Blog = () => {\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [data, setData] = useState<listUserReposIssuesResponse | null>(null);\r\n\t//! 아마 사용되지 않을 상태값. 이후 삭제요망\r\n\tconst [numbers, setNumbers] = useState<number[]>([]);\r\n\tconst { number } = useParams();\r\n\tconst article: listUserReposIssuesResponse | null | undefined = data?.filter(\r\n\t\t(issue) => issue.number === Number(number)\r\n\t);\r\n\r\n\tconsole.log(\"article: \", article);\r\n\r\n\t/**\r\n\t * @constant 글 작성자를 특정합니다. string[]\r\n\t */\r\n\tconst AUTHOR = [\"Citysquirrel\"];\r\n\r\n\tuseBodyColor(\"#f5f5f5\");\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading(true);\r\n\t\tgetIssues()\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst onlyBlogging = res.data.filter(\r\n\t\t\t\t\t(issue) => issue.title.includes(\"[BLOG]\") && AUTHOR.includes(issue.user?.login!)\r\n\t\t\t\t);\r\n\t\t\t\tsetData(onlyBlogging);\r\n\t\t\t\tsetNumbers(onlyBlogging.map((issue) => issue.number));\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(\"Network Error: \", err));\r\n\t\t// eslint-disable-next-line\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<SideNav data={data} isLoading={isLoading} />\r\n\t\t\t{article && article.length > 0 && number ? (\r\n\t\t\t\t<Article data={article} isLoading={isLoading} />\r\n\t\t\t) : (\r\n\t\t\t\t<Issue data={data} isLoading={isLoading} />\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Blog;\r\n"],"names":["fontColorByContrastRule","color","code","slice","hex","Number","useScreenBorder","options","useEffect","top","document","getElementById","right","bottom","left","container","footer","footerCopyright","footerEmail","footerGithub","contrastColor","footerCopyColor","style","height","backgroundColor","width","borderWidth","transition","useBodyColor","body","octokitForBlog","Octokit","auth","getIssues","request","owner","repo","modifyDatetime","datetime","undefined","kr","alias","received","Date","now","nowYear","getFullYear","nowMonth","getMonth","nowDay","getDate","nowHour","getHours","nowMin","getMinutes","aMinuteAgo","aHourAgo","aDayAgo","aMonthAgo","aYearAgo","difference","getTime","Math","ceil","toLocaleString","useConsole","state","name","console","log","count","modQueryString","str","decodeURI","split","map","query","reduce","t","i","k","v","useLabelAllCheckbox","def","querySelectorAll","forEach","input","index","setAttribute","label","createElement","insertAdjacentElement","children","rest","className","language","startsWith","replace","customStyle","borderRadius","padding","margin","wrapLines","CodeConfig","Wrapper","styled","Container","Subject","Body","styleForMarkdown","data","realData","isLoading","created_at","writer","user","login","title","overrides","pre","PreConfig","join","Single","search","useLocation","navigate","useNavigate","filtered","filter","issue","queryObj","tags","labels","includes","length","tag","description","trim","to","number","ele","idx","toUpperCase","onClick","key","e","href","html_url","target","rel","id","List","LABELS","toArr","Object","entries","useState","setIsLoading","setData","setNumbers","useParams","article","AUTHOR","then","res","onlyBlogging","catch","err"],"sourceRoot":""}