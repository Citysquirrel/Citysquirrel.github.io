{"version":3,"file":"static/js/231.5d8c92c2.chunk.js","mappings":"gPAgFaA,GA7EKC,EAAAA,GAAAA,IAAH,6pBAYM,SAACC,GAAD,OAAWA,EAAMC,KAAjB,IACD,SAACD,GAAD,OAAWA,EAAME,MAAjB,IACV,SAACF,GAAD,OAAWA,EAAMC,KAAjB,IACC,SAACD,GAAD,OAAWA,EAAME,MAAjB,IAoBIH,EAAAA,GAAAA,IAAH,8NAYIA,EAAAA,GAAAA,IAAH,0DA8BiBA,EAAAA,GAAAA,IAAH,wFAMdI,EAAcJ,EAAAA,GAAAA,IAAH,iQC/ElBK,EAAYL,EAAAA,GAAAA,KAAH,yHAOTM,EAAUN,EAAAA,GAAAA,IAAH,kQAePO,EAAWP,EAAAA,GAAAA,IAAH,+LAURQ,EAAQR,EAAAA,GAAAA,IAAH,qRA0FX,SAASS,EAAT,GAAmD,IAA7BC,EAA4B,EAA5BA,QAGrB,OCjIAC,EAAAA,EAAAA,YAAU,WAET,OADAC,SAASC,KAAKC,UAAUC,IAAI,kBACrB,WACNH,SAASC,KAAKC,UAAUE,OAAO,iBAC/B,CACD,GAAE,KD4HIC,EAAAA,EAAAA,eACN,SAACb,EAAD,CAAac,QAASR,EAAtB,UACC,SAACX,EAAD,CACCmB,QAAS,SAACC,GACTA,EAAEC,iBACF,MAGHR,SAASS,eAAe,SAEzB,CAED,MAvFmB,WAClB,MExDM,WACN,OAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,UAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAUA,MAAO,CAAEL,OAAAA,EAAQM,OATF,WAAyC,IAAtBC,EAAqB,uCACtDJ,EADsD,uDAAxB,GAE9BI,GAAWF,EAASE,GACpBN,GAAU,EACV,EAKwBd,QAJT,WACfc,GAAU,EACV,EAEiCC,UAAAA,EAAWC,aAAAA,EAAcC,MAAAA,EAC3D,CF0CoCI,GAA5BR,EAAR,EAAQA,OAAQb,EAAhB,EAAgBA,QAASmB,EAAzB,EAAyBA,OACzB,GAAkCP,EAAAA,EAAAA,UAAS,GAA3C,eAAkBU,GAAlB,WAaA,OACC,iCACC,SAAC1B,EAAD,WACC,gBAAK2B,UAAU,kBAAf,SAdU,CACZ,CACCC,GAAI,EACJC,MAAO,gDAER,CACCD,GAAI,EACJC,MAAO,mCAQCC,KAAI,SAACC,GAAD,OACT,SAAC9B,EAAD,CAECW,QAAS,WACRc,EAAaK,EAAIH,GACjB,EAJF,SAMEG,EAAIF,OALAE,EAAIH,GAFD,SAYZ,UAAC,EAAD,YACC,UAAC1B,EAAD,YACC,gBACCU,QAAS,WACRW,GACA,EAHF,UAKC,gBAAKS,IAAG,UAAKC,GAAL,sBAAiDC,IAAI,cAE9D,0BACC,gBAAKF,IAAG,UAAKC,GAAL,sBAAiDC,IAAI,cAE9D,0BACC,gBAAKF,IAAG,UAAKC,GAAL,sBAAiDC,IAAI,cAE9D,0BACC,gBAAKF,IAAG,UAAKC,GAAL,sBAAiDC,IAAI,cAE9D,0BACC,gBAAKF,IAAG,UAAKC,GAAL,sBAAiDC,IAAI,cAE9D,0BACC,gBAAKF,IAAG,UAAKC,GAAL,sBAAiDC,IAAI,cAE9D,0BACC,gBAAKF,IAAG,UAAKC,GAAL,sBAAiDC,IAAI,cAE9D,0BACC,gBAAKF,IAAG,UAAKC,GAAL,sBAAiDC,IAAI,gBAG9DjB,GAAS,SAACd,EAAD,CAAYC,QAASA,IAAc,UAIhD,C","sources":["components/Modal.tsx","pages/Workpieces.tsx","functions/useScroll.tsx","functions/useDisclosure.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div<{ width: string; height: string }>`\r\n\t@keyframes switchModalOn {\r\n\t\tfrom {\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t\tto {\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n\tposition: fixed;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tleft: calc(50vw - ${(props) => props.width}px / 2);\r\n\ttop: calc(50vh - ${(props) => props.height}px / 2);\r\n\twidth: ${(props) => props.width}px;\r\n\theight: ${(props) => props.height}px;\r\n\tpadding: 8px;\r\n\tbackground-color: white;\r\n\tborder-radius: 8px;\r\n\tanimation-name: switchModalOn;\r\n\tanimation-duration: 0.5s;\r\n\tz-index: 2000;\r\n\t.exit-wrapper {\r\n\t\tposition: absolute;\r\n\t\ttop: 4px;\r\n\t\tright: 4px;\r\n\t\tfont-size: 32px;\r\n\t\twidth: 32px;\r\n\t\theight: 32px;\r\n\t\tline-height: 26px;\r\n\t\tbackground-color: transparent;\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\nconst Canvas = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tbackground-color: rgba(0, 0, 0, 0.4);\r\n\tz-index: 53;\r\n\tanimation-name: switchModalOn;\r\n\tanimation-duration: 0.5s;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n\tbackground-color: transparent;\r\n`;\r\n\r\ninterface Props {\r\n\twidth: string;\r\n\theight: string;\r\n\telement: JSX.Element;\r\n\tmodal: boolean;\r\n\tsetModal: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nexport const Modal = ({ width, height, element, modal, setModal }: Props) => {\r\n\tconst modalOff = () => {\r\n\t\tsetModal(false);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container width={width} height={height}>\r\n\t\t\t\t<div className=\"exit-wrapper\" onClick={modalOff}>\r\n\t\t\t\t\t&times;\r\n\t\t\t\t</div>\r\n\t\t\t\t<Wrapper>{element}</Wrapper>\r\n\t\t\t</Container>\r\n\t\t\t<Canvas onClick={modalOff} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n//? ModalContainer는 ModalCanvas 내부에 존재해야 함\r\nexport const ModalContainer = styled.div`\r\n\twidth: 400px;\r\n\theight: 300px;\r\n\tbackground-color: white;\r\n`;\r\n\r\nexport const ModalCanvas = styled.div`\r\n\tdisplay: flex;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: rgba(0, 0, 0, 0.3);\r\n\tz-index: 9999;\r\n\tanimation: 0.35s both;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport usePreventScroll from \"../functions/useScroll\";\r\nimport { useDisclosure } from \"../functions/useDisclosure\";\r\nimport { ModalCanvas, ModalContainer } from \"../components/Modal\";\r\n\r\nconst Container = styled.main`\r\n\tclear: both;\r\n\tmargin-top: 60px;\r\n\tanimation: 1s 0.5s fadeIn;\r\n\tanimation-fill-mode: both;\r\n`;\r\n\r\nconst SubMenu = styled.div`\r\n\tposition: sticky;\r\n\twidth: 200px;\r\n\theight: calc(-64px + 100vh);\r\n\ttop: 63px;\r\n\tleft: 0;\r\n\tpadding: 36px 16px;\r\n\tuser-select: none;\r\n\t> .submenu-wrapper {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 4px;\r\n\t}\r\n`;\r\n\r\nconst MenuList = styled.div`\r\n\tborder-radius: 0.375rem 0.125rem;\r\n\tpadding-block: 2px;\r\n\tcursor: pointer;\r\n\ttransition: all 0.3s;\r\n\t:hover {\r\n\t\tbackground-color: var(--soft-blue-300);\r\n\t}\r\n`;\r\n\r\nconst Table = styled.div`\r\n\tdisplay: grid;\r\n\twidth: 100%;\r\n\tgrid-template-columns: repeat(2, 1fr);\r\n\tgrid-template-rows: repeat(4, 1fr);\r\n\tgap: 4px;\r\n\tobject-fit: cover;\r\n\r\n\tdiv {\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\timg {\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid black;\r\n\t}\r\n`;\r\n\r\nconst Workpieces = () => {\r\n\tconst { isOpen, onClose, onOpen } = useDisclosure();\r\n\tconst [currentId, setCurrentId] = useState(1);\r\n\r\n\tconst list = [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\ttitle: \"코딩 학습 플랫폼\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\ttitle: \"스텔카운트\",\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<SubMenu>\r\n\t\t\t\t<div className=\"submenu-wrapper\">\r\n\t\t\t\t\t{list.map((obj) => (\r\n\t\t\t\t\t\t<MenuList\r\n\t\t\t\t\t\t\tkey={obj.id}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetCurrentId(obj.id);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{obj.title}\r\n\t\t\t\t\t\t</MenuList>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</SubMenu>\r\n\t\t\t<Container>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tonOpen();\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img src={`${process.env.PUBLIC_URL}/images/sample.png`} alt=\"sample\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={`${process.env.PUBLIC_URL}/images/sample.png`} alt=\"sample\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={`${process.env.PUBLIC_URL}/images/sample.png`} alt=\"sample\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={`${process.env.PUBLIC_URL}/images/sample.png`} alt=\"sample\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={`${process.env.PUBLIC_URL}/images/sample.png`} alt=\"sample\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={`${process.env.PUBLIC_URL}/images/sample.png`} alt=\"sample\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={`${process.env.PUBLIC_URL}/images/sample.png`} alt=\"sample\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={`${process.env.PUBLIC_URL}/images/sample.png`} alt=\"sample\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Table>\r\n\t\t\t\t{isOpen ? <ImageModal onClose={onClose} /> : null}\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\ninterface ImageModalProps {\r\n\tonClose: () => void;\r\n}\r\n\r\nfunction ImageModal({ onClose }: ImageModalProps) {\r\n\tusePreventScroll();\r\n\r\n\treturn createPortal(\r\n\t\t<ModalCanvas onClick={onClose}>\r\n\t\t\t<ModalContainer\r\n\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t></ModalContainer>\r\n\t\t</ModalCanvas>,\r\n\t\tdocument.getElementById(\"modal\")!\r\n\t);\r\n}\r\n\r\nexport default Workpieces;\r\n","import { useEffect } from \"react\";\r\n\r\nexport default function usePreventScroll() {\r\n\tuseEffect(() => {\r\n\t\tdocument.body.classList.add(\"prevent-scroll\");\r\n\t\treturn () => {\r\n\t\t\tdocument.body.classList.remove(\"prevent-scroll\");\r\n\t\t};\r\n\t}, []);\r\n\treturn;\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport function useDisclosure() {\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\tconst [modalType, setModalType] = useState(0);\r\n\tconst [state, setState] = useState(\"\");\r\n\tconst onOpen = (type: number = 0, fbState?: string) => {\r\n\t\tsetModalType(type);\r\n\t\tfbState && setState(fbState);\r\n\t\tsetIsOpen(true);\r\n\t};\r\n\tconst onClose = () => {\r\n\t\tsetIsOpen(false);\r\n\t};\r\n\r\n\treturn { isOpen, onOpen, onClose, modalType, setModalType, state };\r\n}\r\n"],"names":["ModalContainer","styled","props","width","height","ModalCanvas","Container","SubMenu","MenuList","Table","ImageModal","onClose","useEffect","document","body","classList","add","remove","createPortal","onClick","e","stopPropagation","getElementById","useState","isOpen","setIsOpen","modalType","setModalType","state","setState","onOpen","fbState","useDisclosure","setCurrentId","className","id","title","map","obj","src","process","alt"],"sourceRoot":""}